{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'opencourse.modeling_data_funcs'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-1-0b38061f9a34>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0msys\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'../src/'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mopencourse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodeling_data_funcs\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mmd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmagic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'matplotlib inline'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'opencourse.modeling_data_funcs'"
     ]
    }
   ],
   "source": [
    "import scipy.io as si\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import sys\n",
    "sys.path.append('../src/')\n",
    "import opencourse.konr as md\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Modeling data involves using observed datapoints to try to make a more general description of patterns that we see. It can be useful to describe the trajectory of a neuron's behavior in time, or to describe the relationship between two variables. Here we will cover the basics of modeling, as well as how we can investigate variability in data and how it affects modeling results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load data and pull out important values\n",
    "data = si.loadmat('../data/StevensonV2.mat')\n",
    "\n",
    "# Only keep x, y dimensions, transpose to (trials, dims)\n",
    "hand_vel = data['handVel'][:2].T\n",
    "hand_pos = data['handPos'][:2].T\n",
    "# (neurons, trials)\n",
    "spikes = data['spikes']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Remove all times where speeds are very slow\n",
    "threshold = .015\n",
    "is_good = np.where(np.linalg.norm(hand_vel, axis=1)**2 > threshold)[0]\n",
    "hand_vel = hand_vel[is_good]\n",
    "hand_pos = hand_pos[is_good]\n",
    "spikes = spikes[:, is_good]\n",
    "angle = np.arctan2(hand_vel[:, 0], hand_vel[:, 1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 1\n",
    "Plot the spike counts as a function of angle. A small amount of meaningless vertical noise has been added to make visualation easier."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'md' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-4-f77ae1c108b7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmax_s\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mspikes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnNeuron\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mangle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mspikes_noisy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'r.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mmd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat_plot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_s\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'md' is not defined"
     ]
    }
   ],
   "source": [
    "# Plot Raw Data\n",
    "nNeuron = 193\n",
    "fig, ax = plt.subplots()\n",
    "spikes_noisy = spikes[nNeuron] + 0.75 * np.random.rand(spikes[nNeuron].shape[0])\n",
    "max_s = spikes[nNeuron].max()+1\n",
    "ax.plot(angle, spikes_noisy, 'r.')\n",
    "md.format_plot(ax, max_s)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We'll also plot the mean spiking activity over time below. Calculating the mean across time is already a kind of model. It makes the assumption that the mean is a \"good\" description of spiking activity at any given time point."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'md' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-5-d7da4b5b4032>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mangle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mspikes_noisy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'r.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mangles\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpi\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;36m16.\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_spikes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlw\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0mmd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat_plot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_s\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'md' is not defined"
     ]
    }
   ],
   "source": [
    "# Make a simple tuning curve\n",
    "angles = np.arange(-np.pi, np.pi, np.pi / 8.)\n",
    "n_spikes = np.zeros(len(angles))\n",
    "angle_bins = np.digitize(angle, angles)\n",
    "for ii in range(len(angles)):\n",
    "    mask_angle = angle_bins == (ii + 1)\n",
    "    n_spikes[ii] = np.mean(spikes[nNeuron, mask_angle])\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(angle, spikes_noisy, 'r.')\n",
    "ax.plot(angles + np.pi / 16., n_spikes, lw=3)\n",
    "md.format_plot(ax, max_s)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Bootstrap error bars\n",
    "The mean is useful, but it also removes a lot of information about the data. In particular, it doesn't tell us anything about how variable the data is. For this, we should calculate error bars.\n",
    "\n",
    "It is possible to calculate error bars analytically, i.e. with mathematical equations, but this requires making assumpts about the distribution of deviations from the mean. Instead, it is recommended to use bootstrapping if possible. This is a method for computationally calculating error bars in order to avoid making as many assumptions about your data. We'll perform this below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x12ad7d310>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "n_angle_samples = angle.size\n",
    "n_angles = angles.size\n",
    "n_boots = 1000\n",
    "simulations = np.zeros([n_boots, n_angles])\n",
    "\n",
    "for ii in range(n_boots):\n",
    "    # Take a random sample of angle values\n",
    "    ixs = np.random.randint(0, n_angle_samples, n_angle_samples)\n",
    "    angle_sample = angle[ixs]\n",
    "    spike_sample = spikes[:, ixs]\n",
    "    # Group these samples by bins of angle\n",
    "    angle_bins = np.digitize(angle_sample, angles)\n",
    "    \n",
    "    # For each angle, calculate the datapoints corresponding to that angle\n",
    "    # Take the mean spikes for each bin of angles\n",
    "    for jj in range(n_angles):\n",
    "        mask_angle = angle_bins == (jj + 1)\n",
    "        this_spikes = spike_sample[nNeuron, mask_angle]\n",
    "        simulations[ii, jj] = np.mean(this_spikes)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "_ = ax.plot(angles[:, np.newaxis], simulations.T, color='k', alpha=.01)\n",
    "_ = ax.plot(angles, simulations.mean(0), color='b', lw=3)\n",
    "md.format_plot(ax, np.ceil(simulations.max()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As you can see, there is some variability in the calculated mean across bootstrap samples. We can incorporate this variability into our original mean plot by including error bars. We calculate these by taking the 2.5th and 97.5th percentiles of the mean at each timepoint across all of our bootstraps. This is called building a 95% confidence interval."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11433c390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot data + error bars\n",
    "clo, chi = np.percentile(simulations, [2.5, 97.5], axis=0)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(angle, spikes_noisy, 'r.', zorder=-1)\n",
    "ax.errorbar(angles, n_spikes, yerr=[n_spikes-clo, chi-n_spikes], lw=3)\n",
    "md.format_plot(ax, max_s)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "### Advanced exercise\n",
    "Do this for all neurons. Do they actually have cosine tuning as indicated by the research?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 2\n",
    "We can also fit a parameterized model to the spike count. In this case we'll use a Poisson distribution where the rate parameters depends on the exponential of the cosine of the angle away from the arm and a scaling parameters.\n",
    "$$P(n; \\theta) = \\frac{\\lambda(\\theta)^n\\exp(-\\lambda(\\theta))}{n!}$$\n",
    "where\n",
    "$$\\lambda = \\exp\\left(\\alpha+\\beta\\cos(\\theta-\\theta_\\text{arm})\\right).$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# This package allows us to perform optimizations\n",
    "from scipy import optimize as opt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We'll use the `fmin` function in python, which allows us to define an arbitrary \"cost\" function, that is then minimized by tuning model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 1457.233156\n",
      "         Iterations: 87\n",
      "         Function evaluations: 157\n"
     ]
    }
   ],
   "source": [
    "initial_guess=  [.8, 0.1, 4]\n",
    "params = opt.fmin(md.evaluate_score_ExpCos, initial_guess,\n",
    "                  args=(spikes[nNeuron, :], angle))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXoAAAEVCAYAAADuAi4fAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJztfXmcXVWV7rfvrUqFQBAwTCGQsjJWpVpAW0BkiNLihEN3\nq42t0s7dD7UbfO8JOHRwbuinkIoTQUW7207oRjGljUoKiYmdAHYENERKBAQsBgUlt4AkZFjvj1OL\nu+66e5/h3nPHrO/3O7+qunXuPvvs4dtr2ms7IoLBYDAYuheFVlfAYDAYDI2FEb3BYDB0OYzoDQaD\nocthRG8wGAxdDiN6g8Fg6HIY0RsMBkOXo6fRD3DO/QbANgB7AewiohMa/UyDwWAwlNFwokdE8EuJ\n6I9NeJbBYDAYFJphunFNeo7BYDAYPGgGAROAtc65nzrn3t2E5xkMBoNBoBmmmxcR0UPOuUMREf4v\niegn8gbnnOVhMBgMhowgIpfmvoZL9ET00NTP3wO4FoDXGUtEduVwLVu2rOV16KbL2tPas12vLGgo\n0TvnZjjnDpj6fX8AZwLY0shnGgwGg6ESjTbdHA7g2inTTA+AbxLR9Q1+psFgMBgEGkr0RHQvgOMa\n+QxDJZYuXdrqKnQVrD3zhbVna+Cy2noaUgnnqB3qYTAYDJ0C5xyoXZyxBoPBYGgtjOgNBoOhy2FE\nbzAYDF0OI3qDwWDochjRGwwGQ5fDiL6ZmJwENm2KfhoMBkOTYETfLExOAqeeCpx2WvTTyN5gMDQJ\nRvTNwpYtwB13ALt3A1u3Rr8bDAZDE2BE3ywMDwNLlgC9vcDQUPS7wWAwNAG2M7aZmJyMJPklS4CZ\nM1tdGz8mJyPtY3i4fetoMBgy7Yw1ojeUwX4EXow2bDCyNxjaFJYCwVAbzI9gMHQljOgNZZgfwWDo\nSpjpxlCJTvAjGAwGs9EbDAZDt8Ns9AaDwWB4Bkb0BoPB0OUwojcYDIYuhxG9wWAwdDmM6A0Gg6HL\nYURvMBgMXQ4jeoPBYOhyGNEbDAZDl8OI3mAwGLocRvQGg8HQ5TCiNxgMhi6HEb3BYDB0OYzoDQaD\nocthRG8wGAxdDiN6g8Fg6HIY0RsMBkOXw4jeYDAYuhxG9AaDwdDlMKI3GAyGLocRvcFgMHQ5mkL0\nzrmCc+5nzrnRZjzPYDAYDGU0S6L/BwBbm/Qsg8FgMAg0nOidc3MAvBLAVxr9LIPBYDBUoxkS/WUA\n/i8AasKzDAaDwaDQ08jCnXOvAvAIEd3mnFsKwIXuvfjii5/5fenSpVi6dGkjq2YwGAwdhXXr1mHd\nunU1fdcRNU7Qds59GsBbAOwGsB+AmQC+TUTnqPuokfUwGAyGboNzDkQUFJ4r7m0WwTrnTgfwv4no\nNZ7/GdEbDAZDBmQheoujNxgMhi5H0yT62EqYRG8wGAyZYBK9wWAwGJ6BEb3BYDB0OYzoDQaDocth\nRG8wGAxdDiN6g8Fg6HIY0XciJieBTZuinwaDYd9BjXPfiL7TMDkJnHoqcNpp0c9GkL0tJAZD+0HP\n/Qwwou80bNkC3HEHsHs3sHVr9HueaMZCYjAYskPP/Qwwou8kTE4CTz4JLF4M9PYCQ0PAkiX5PqPR\nC4nB0EloJ+12eDia7zz3M8CIPi1a3eEsab/iFdHf3/8+sGEDMHNmvs/RgynvhcSwb6PV8ygL2k27\nnTkzmvPr10c/M8CIPg3aocOlpD0+Duy/f/4kD1QPpkY8w7Bvoh3mURa0o3Y7cyZw0kmZ56URfRq0\nQ4c3U9KucTAZDLFoh3mUBV2k3VpSszRgSWTr1qjDWyXpTk5Gk2PJkvDzJyejCTU8bERtqESrx0a7\nzKMsSDPnWoS2zEcfW4l2J3qgrTv8GfBE4nrKidTqSW5oLeLGRrPr0e7zqENg2SsbgXY1Z0jnVkg1\nTrKNdpKDzFAb2sVs0q7zqMthRN9OyEq4msDnzvXbFOMmeac5yAy1oYvszYbsMKJvF2Ql3MlJYNWq\niMSZwO+/3x8xEzfJ20XSMzQWFk21T8Ns9O2CTZsikt+9OyLk9esjFdcHaW/t6Ym+k2R3DdlGO9FB\nZjAYzBnbkUhLuCzJn3susGdPRPSf+xzwtrfVTtDmIDMYOg5G9J2KJMKVknyxCOzcGX0+PAxs3Ggk\nbTDsQ7Com05FUkSCtKfv2QMUprpvfNxs6waDIQgj+k6CdKouXhyZeDoxisLCOQ2GpsJMN50Gad4B\nOs+23i4bdwyGDofZ6Pd1tPMu2CzRRQaDIQiz0Xcy6jVrtPsGKNu4YzA0HUb07YQ8SDrrBqhm28tt\n447B0HQY0bcT8tilmkVibpX0b/lODIamwoi+nZCHWSOLxGzpDwyGfQLmjG03NHOXqqU/MBg6FhZ1\nY0iPTk9/0M4RRgZDA2FEb9g3YDH5hn0YFl5p2DdgPgaDIRUyEb1z7mDn3HMbVRmDIRMaGZNvaRoM\nXYRE041zbh2A1wDoAbAZwO8A/DcRfSC3SpjppvnoFtt2I3wMZhIydADyNt08i4hKAP4CwL8Q0YkA\n/qyeChpajHbfPZsFjYjJN5OQocuQhuh7nHNHAngjgO9lKdw51+ecu9k5d6tz7hfOuWU11dKQL5pN\nZJ1mBrE0DYYuQxqi/xiAHwL4NRH91Dk3AOCuNIUT0U4ALyai4wEcB+AVzrkTaq6toT4w4YYOEW/U\nMztNe7A0DYYuQ0+Kex4iomccsER0j3Puc2kfQERPTf3aN/U8M8Y3Akk2d213vu666DDxRsfP+7SH\nTshWySYhg6ELkEaiX5HyMy+ccwXn3K0AHgawloh+mva7hpSYnAROPjmSmk8+2S81a8K9//7m5Jsx\nM4jB0HIEJXrn3AsBnAzgUOecjLA5EEAx7QOIaC+A451zBwL4jnNuiIi21lphgwc33xwRORD9vOUW\n4IwzKu9hwuV0B80iXDaDdPLuW4OhwxFnupkG4ICpe+TsLAF4fdYHEVHJOXcjgJcDqCL6iy+++Jnf\nly5diqVLl2Z9hCEOrSRcM4MYDHVj3bp1WLduXU3fTRNHP5eI7qupcOdmAdhFRNucc/shcur+ExFd\np+6zOPp6wKabX/4SGBwENm40ydlg6HJkiaNP44ztc86tBNAv7yeil6T47pEAvuGcKyDyB1ytSd6Q\nA2bOjMjdzCMGg8GDNBL97QC+jGhX7B7+nIg251YJk+gNBoMhE/KW6HcT0ZfqrJPBYDAYWoQ04ZXf\ndc6d65w70jl3CF8Nr5nBYDAYckEa0829no+JiAZyq4SZbgwGgyET7OARg8Fg6HLkaqN3zp3j+5yI\n/iVrxQwGg8HQfKRxxr5A/D4dwBkAfgbAiN6QDt2S+77ZsHYz5IREZywRvV9c7wbwPEQ7ZluLTkt9\nWwv0O3biOzcie2Ut7dBpbdeJWT8NjUUdY7iWM2OfBPCcGr6XHxo5CVpFCD5Sl+/44IPR7tdTTwVO\nPBEYG8ufNCcno3LzKhuoTKZ2xx3A6tX1lV1L33ciabbq8JNOWxD3FdQ7hoko9gLwXQCjU9d/AbgH\nURqDxO+mvaJqZMDGjUQ9PUQAUW8v0aZN2b7vQ6lEtHYt0fBwVPaxx0afNQOlUvQ8+Vz9jsuXR7/z\nVSymqyOX5btPPnd4mGhwsFz+8HA+7y+fMX16/W0r26VYJBoby/advMZLo8Ht1tvbvLHoG4eG9oBn\nDE/xZjqOTbwBOF1cLwIwJ23hqSuRlejzngRcXrFYJrpmEoKPiPQ7rllTSfRp6pg0ceVze3qICoVy\n2T09+b1/qUQ0MlJu31C94xYlec/wcLYFKet4SVOPZqBUKo+FLN+pte6duCDuK/CM4VyJniIiPhzA\nWVPXYWkLT12JrETPL551EoQgBziTXCskek1E8h2Z4IpFor6+dKSVNHHlcxsl0fNzNDlPTFQSUhZp\ncu3a7IQUN14kOXayVFtv3WsVoNplYex2qDGct0T/RgD3AfgGokibewG8Pu0DUlWiFqLPE5rwxsZq\nG+T1DHhN6r5y+J6JiXSLXJqJq587Npbt/eOeze+gNYfR0WRTVRpNJQ+NTpNjLYtIuyAPiTyrANXJ\nC2OHI2+iv11K8QAOBXB72gekqkSriZ6odjVZ2rjzsO/nPXHSLCB8X15SmX6HiYlKYvaRaS3mlTw0\nOk2OY2PNt43nhVbY9c3c0zLkTfS/UH8X9Gf1Xm1B9LVAOwbzGPCNmjgTE0Tz5/uduHkvLiGfg1xw\nkkxV9SDLouWrS55mwWaj2XVvxeJiIKL8if6fER0Y8rap6/sALk37gFSVaGeiTxO1wiaf4eFsA95X\ndiMmTqkUkXzI0Zr34pLVZJQnalm0OpnY2wH7Qvu1oR+iEc7YvwDwuanrz9MWnroSrSb6OJt4Emlo\nSTXtgI8rW9risw4u37toZ/P8+c1ZXFox+TvZlNCGZGKg1vohYsZE3hL9cwBMF3/vB6A/7QNSVaKV\nRB/XiY0kjbQRMT09ETFPTJQ/TxMXr00iTOTz5xONj/s1iWaG8jWK1DrVlODzaxjptwdaJTwkLDB5\nE/3/AJgm/p4G4KdpH5CqEq0k+rhObCRpJJW9dm1lXD+Tve74UHSL711YS8hDOqlHymk0qXWiKUH3\n3fz5FsnSLmiV8JCwwORN9Ld5PuueqJukTqzHjJLm2T5CKpUq487Zrr5ypT9CJBTd4qurdiCPjmav\n88aN9YUhGqlVQ2tdSZvLDM1FK4SHBG7Km+jXAniN+Pu1AG5I+4BUlWgHG31cJ0oJdHg4IrlGdri2\nqXOkTNowxbhwylKJaGioXHZfX9kslATdDlmdz7ocI7VKaK2r08xPhvwRw015E/08ADcBuH/q2ghg\nXtoHpKpEq4k+CSHibdQE1NE8cgOTJvIQIcSZVnTenCuvTFcvX8x5rVKOkVo8OtH8ZGgqshB96hOm\nnHMHTDHyE6m+kAFtf8IUZ47jbIIA0NsLrF8PnHRS4555xx3AkiXxuchD923aFGW6270bKBaBH/4Q\nOOOM6H8PPgjMmwfs2AFMnw7cfTcwe3ZyfW6+GTj/fGB8HBgaAjZsqK7bgw8C3/secNZZyWWmeVfL\nyW4weGFHCTYCk5PALbcA550XT3TtgsnJKK3xli3R3wMDUX2ZfB98ELjuOuCVr0xH8rzQLV4MXH45\ncMIJfpLPuoCkfe6SJe3d3gZDk5GF6GvJR7/vQObmnjkzkog3bowk+XYkHV3fyy6LpHkAuOce4PTT\ny3msZ88G3vWudEQsc6OPjwP77+9/9+99LyJ5IPp53XX1vY/OyX7LLZYr3dAadHiefpPoQ+g0adJX\nXwB43vOAX/86+r2nJ/o8q7mJy966NV6TaZREv3UrsGhR9Nmdd3ZGfxi6B23KBblK9M65Gc65jzrn\nrpz6e4Fz7qx6K9kWiFulm3nCT1ZpwXe/r74zZwI//jEwf35E8kuWAMcck10ymTkzGtxJmszs2RG5\nX3llJcnrU6zSPl8+97LLIpJv9olLBkOrTvvKE0neWgBXA/gggC1Tf8+AJ7a+ngvNjroplZJPk2rW\nJomsG4/S7H6NS6nQ7K3cvpDMejZZWXSOodlo07GHvHfGTv28VXzWuRumuNPSnCbVjBC3rNur0+x+\nDdXXFx4ZyvGT1+awWjJ8hp5fKkV1bvQ+BkP3I+sYb8Nw17yJfiOi/DY/m/p7HoBb0j4gVSV8RN+o\nXCitPk1KI6u04Ls/jhh9pzjJbJshzSDPfPhZMnzGPT/vuhn2TXTJOMqb6F8K4McAfg/gmwB+A2Bp\n2gekqoQm+lrMGbXkH896mlSjkFVa8G2aSkvY/N1QCoN6EjjFLThpM3zGPT+U596Sfxl8CI2NTs5w\nKpAr0Ufl4dkAXoXozNhZaQtPXQlN9LUcK5dn/vF2I4+4+oTaKst5sWlt/XF1C9n/a1GRk3b78v9a\n4XMwdAbSaIZtZnPPirwl+o+rvwsAvpn2AakqEZLo8zgAOyvaTa1Lqo/8v05nnNSGoQUvjYahHdqc\nmMx3PGDWtox7vvxfl0hmhgYgjaDTLjb3GgXLvIn+KgAXTf3eB2ANgIvTPiBVJUI2+noPwK6lAfMk\njzw0gzT14WMCddrfNIeIp7Xv6/8xgUtfx/z5lf3QiEU45HNoh0XZ0D7olLFRh2CZN9E7AP8O4CIA\n1wM4P23hqStRb9SNb1HQDZg2zXBeAyQvzSBNfWpN+5vVvu97ns6uKfshz8mW5HOop33byUxnyA/t\nJLWHUIcwlAvRA3ieuE4EcBuAL/BnaR+QqhKS6NkkUG8InWxAaVpIa3eud4DkrRnEmTLYhJI17W+o\njvLQkyT7Pju0QwtpXpOtEWaadjPTGfY91CEM5UX0N8ZcP0r7gFSVYKIvlSoP3BgezkcS9tmP84RP\nKmyG6iiJShKudliGJNaJCaLp06N2mT49+jttH0gCbwZh+tqzXml848bygqYPTDfsW2ilZlejMJR7\n1E2tF4A5AH4E4A4AvwDw94H7opr7TAJ5SMJ55TyPI/S4Q74bNXhCUq5+7zgTjCY6rQmNjWWvR2gj\nVr3Ie3HxLXSG7kMSiXeoZpeXRP+WqZ8f8F2pCgeOAHDc1O8HABgHsNhzX1TzPCV6jTxsub7B0MrI\njyStoZYQy1okZ23KqTXNQRbU2+6lEtEVV1jUTrcjDYl3aPRWXkT/t1M/l/mutA9QZX4HwBmez8u1\nL5UiibAdNjJJxEnPrfTuJ9nvawmxrEVy5u/Uc5asr8ykyJ96jjIsFiNJvt0jMwy1Iw2Jt3oO14i2\nMd1UPAjon9pVe4Dnfw1rjNwQNxja2btfb92ySjvNjFqq9d20eerKK9uz7wz1I+14bOc5HEAWok/M\nR++cGwCwHMBJAAjApqkQy3tiv1hZxgEA1gH4BBGt8fyfli1b9szfS5cuxdKlS9MW3zykPd6vm5A2\nF73+Tr3tJI9CzPvYxlreydC56JJ5u27dOqxbt+6Zvz/2sY+B8jpK0Dl3E6KwylVTH50N4P1EdGKq\nBzjXA+B7AL5PRMsD91BSPQwtRCsmSqPJuEsmv2HfRa5nxjrnfk5Ez1Wf3U5Ex6aszL8AeJSIPhBz\njxG9oRpGxgZDEHkT/SUA/ghgNSLTzV8BOBjAPwMAEf0h5rsvArAeUWglTV0fIqIfqPuM6A0GgyED\n8ib6e2P+TUQ0kKVygWcY0RsMBkMG5Er0zYARvcFgMGRD3oeDv8E5N3Pq9484577tnDu+3koaDAaD\noTlIJHoAHyWiSefcKQD+DMBXAXy5sdUyGAwGQ15IQ/R7pn6+CsBKIvovANMaVyWDwWAw5Ik0RD/h\nnLsCUbTNdc65vpTfMxjaE5OT0YasyclW18RgaArSEPYbAfwQwMuI6HEAhwD4vw2tVbtNxDT1ibun\n3vdpt/boZPBGrNNOi362uk1b1beNem6e88DGfSXqaY+0uRIaeQEoJ7BqtwOf+Zg+PkVJ57hJqnO9\nKVAbmUI1dMiLTCYWSs3cqacy6dw9K1fW/x61tker0uM26rmhcnmcDQ9H8+ioo4jGx9MlrWslDzRj\nnKd9hqc90I5JzWIrAZQPB4k7JKSehq/lu6VSVB9Om1woEK1eHaW3HR8vN/zAQPhEpjSpgnmx8NUv\nbVKxrO83MRHVm99tcDCajHLR8qUczmPhakYfhu6VSa6mT/cv4FnqIw9Iz1pOXN/mSTK6rFrS8iYt\n/qFy5XjhsQYQTZsWjbk0x1U2OnVwSJjhes+fH833vEk/aS7JenmywnYm0cvDRo46Kvs5pvU0aAj6\nIBSAyLnyQGVylxfn0NfSfijrpUyXm6QRzJ/vPxwjy/vxoJEkrw/4lpkd9QIWl645KWd9GlJMIuis\nZ+EOD1drLBMTRBdcEC3c9eSz1wSWtZxQZsU8pVlfWVkzjOr2DPVhqVSW2nke+OaQnOtZzkpoBELt\nI88q4Pmet3aRtNDLNh8crOKYziZ6blAmNR4sekXLcopRrdJBSBrha86cSrIvFst59OXg0Ydm++rl\nIwt+9/Hx8Jm3elAmSf1x7yPJXh8iIvsjdFhJaCJI81ccKfJ9vnLS5hXXY4X7hcuTdQktrr4yk/qu\nVs2gVKoeG3lKs0mnkGWdP8ViPDnxeJECD4+XRYui+Q0Q9fVF5JX1rIQQatWAfKejsfDFdQ3Nz3oR\nt5jpVNo8dwoFotFRIqIOJ3opZXGjS0millOM0kgHIfVt7dqoYfl5LNH39UUEPDZWrheXncXcIk/U\n0hoBP3NgwF8ek1ahkHyABi8IemEaGIjMUfId5MLkI189AePed2Ii0tB0H+vTw0qlSjNZWhKR5gSf\n1CkXsLGxymfoXPTc36wB+CRU+V7cLnxeb16SXuiIw1rILK1kHFe2LEPOw7SLsRwvExNRm7PQkEcO\n+Dy0fX4fKSQUi2VhrlEH1ITaQI73oaEulOj7+sodJhu9pyci3FpPMYobVHHqrZTKx8aIFi6MOn5w\nsJIgxsYqCSKt2qkHFp/RunZtJTmydMETXxNosVgmLR9h8buwFKvJSb8Dw3eGLJMC+xVCB5IzGer3\n8BGnPL8WiL6nF4LBwXLbawe4T+MbHY3GE7fbmjWV5D8wUE3qcjKtWVNZd+4b2Z4hc1otkBqJPsu3\nXjKTYz/Uf2kPeYkjJ9840Ity3sjjWEl9opoWekJauS4nT7/K8HAkFLEw1lU2+t7eSsLynSEbR6S1\nNLZvoKT9jJ/pWyhCk0HWLzQ5NMmwJuGTTCUx+tpMk6DvRKUQkejyBgfLUq40fcgJIUlQkvehh4bN\nb5o8tfNLL3zLl/tV7jjNSt4zMBBJSr6FghfOkRE/0TfCUejTSGrREuPK16TOzui4AIha3kOPgyQN\nvFaC1O+Ul8Rdi6ZRz0LM39cOczl3BgaqxkRnE/3AQGUjSekmycZYa2P7Fo40nzEpp9EwWMr2DfjQ\n5Fi4sNwuIU0HiNRLVoWvuKJs/pILQ8jpx4PLR4rS4899IG20PjOLLoft/UzeUh31RfToduD/aaIf\nHfX3jxwTcWYnnwagF7SJiUpzEfc3+0zyVOV97Z/0Lnp8pQlV1IsvjxH9PvVKpyEbc8gk59Py4uDT\nuJt5FKCPmGtdLEOCojZlqjHR2UQ/5WioaoQ0k6qeUERJMlLK1J9NTESx15s3lycNe8Wl/TjUkSEb\ntK/+Umrt6YkkTL3gDAxE0r8kRzZXaC1Iq+96okg7LJtJmOD43oGB8rv67Jbj45UOt9Wry+YeOamP\nPDLcV76FU353cDB65zVrwrZxTW7SvCIXXVl/DjmVPgTf4jN9enSPDhjIKgHGaXaSbLWWpE1FSQJO\naPFlLXH69Kjfsh4IHwfpZ4hzvOoFnLWmJDQz/FIjRMxy/mgTaBxC78KLe4D7OpPoQyTJDZtmtWYy\nSCorZKKQEjd3VkgFlR55JsCQVJIUoRFSQVmi1KTN32EpVEtqvb1EK1ZUEqwmolDM86ZN1WajkZHK\nyB+272spSksh3DY+8wMQtaFPy0h6Z49jqqqPQ5FIcowMDla2kXRW+/ZDaElYagJ6zMWRf2gTnhzn\nISk8jYCQFKrIwgprfuwHCJWXJcLN116sVcp3k9piLUSfRQDMG6H2GR+P5krc/gAf4t6Fx7xn4ehM\nos/L+56kBmbZ1KEnmc9sARDNnp0+JtjnBI1TQUOmK9+7+Fb/uIUtNLj05Etrx/WRoZwMOn5fO5C1\nGUw6p7nOvsihkCmgr6/6/Xy2/pDdWkrOUkJ1LroGB4kuuaSaqOIkYr0YapLN0reybnFmHX6uT6ML\nkYscrz4Tm9ZGtNM1ZDf3jfck4UzWSz+3meYaWQ/dPuyzSgohjiszzsHt6dvOJPpaoDs+bax1nNOO\nJ7LsLB1X3ttbaR5ZuDAcciafmxRLn0Ya0xNSLmzj45GkJglKx0Br4vRJC7LcODtuqG2LxWjxW7y4\nbF5iKWdwsBwuqtVe7YiUZCvL9pmmGJrI2dwV+j+TOku3zpWdxrJ+eoEpFKJ6yLHCRB/Xp3qs8TuG\ndmb6Ql51m3NfDQxkiwCKI0r+n8+X4TP5+ZyuvjrHaZKh3eGyPeoxJ+UJX/vocZVHPWO0q84ket8A\n9uVhkf+v1U4WJ90MDhL191cSiRyw0rwhVdORkdpiqZOInKWj0CQfGopIZ9GisKM3ZOqImzwTE2U1\nlNvTZxPXi62ULpnUtZSjHY16MI+OVps2tHNPtncWUwC3h3RYy999moiW9n33Si0yrbTMDuo46V87\nZK+4opLM05o+dD/FQUvo8l3kuO/tjQSLNE5X3/un0TwZrbTJx0HWm31Wee6riNGuOpPo09ppGXGh\njtJumsVOpldoLQH7OoA7uBZJQxK5lqzTSDA+6VROQJ6o0lwiTQVxEU1SSuMNY9qk4atjaBdlSMph\ncpYaUcgZGyIIqdWwKSBkvuP7WSLv7Y20Dx95DwxEph1purv00nJdQ3sS5HhKEjTS2MNLpYhg5Z4A\n7oM0RJ9FGg4JUCxx63mpnfhJmm2oberRbJOQZZHL+n0evz6fVV4IaFedSfQ6RE+bDdI4mEKhgnnk\nHwndKyWarDa5kMqb9h30JB8YKBMQk6pWLePi7UMS9vLllVIvlxFSw6WzU+5m9pGhbAMdneNzcOqJ\n5CO6OJLVmsGKFZVhrM6VnescZ69NRVk20aQZBzKayGcPP/bYaq3jyiv93/dpsXF+nrj2iYuGYger\nJDq5KOSp2cp7WhHfHqdxNdOcpHwxnUn0WSV6vs8Xd13PBgo9cNPcX8uzkuKMk9R/1gS0NLtyZWVZ\nMoZeSuO+Ha++dxoejsxCWnOQTkcdEqjrlIZ0fZExsoyQRKUjhHR4blJ/SfLi7KRaekprkqh10w+T\nuy8Lqrbpa4meywhpsWnnUqh94srJO6V4FiJP2971mnzS+lvyNicxD/l2t0/N484kep+KPTaWjnDj\nHDx5rP5Jg6qeZ8m49TQSrK6jL8TRR746tC1pMeTvaCLVhKHrmGXwhyR3vQjFRZTEmS70ZPH1Vxyx\n8efSmVxLHHsckqJrtM9jZMTvcA21e9yCHoJv3Pmc+mmDH/JOfeCbA0lO3FrDMJMErnrKDkGnEJ87\ntzJ9x1RbdybRS2QdHHGTNUs5SaGXeatnUiNJCgvld0m7CzcUTRO3SPigiVTGXi9f7l8g0vZFyOwg\ny0gK65SmVM0yAAAgAElEQVRlcNRJqRRNDO1Uz7pQy3j3oaGovFCenrxMhRMTkVayfHmlozYpp06a\nBaue8eurZ8hvIL+TZl9LPSlLkgSBkIae5blxglwtQl7Ss/ReFCAae12RAkG+aK1bouN2fsZNcrnr\nVWcNzFs98w2w0ALjywPjc3jpMkPvrp+T5nQlTcZDQ37JXn8nTV9os0TIAZi0cOhMkjLKKM7PkwRN\nKHGaQ9pY8FAbc3vJMcgpu9OOvRDp5EVGuk+0o11rC0mO4tDGsTT1SCMIhMZdI4W3euEz1UltTISh\ndjbRhwZHvdJ5KJpBdnhc1sA4E0cWySBu4ElpSddLv0vcdvXQwiElMOci6TzO8aVTQbB0FLdhKU1f\n6OgeX/glm5d84aWaILQ93RcuWSsBc9vqyJzR0cr2qUU48eGKKyqfM2dO/qaBehEio6Q9DXpxTLNx\nLIQkQUDXM2TOaqdQTaLKMSfbuK+vrK1O/b+zid7nXKtlBZZSli+BFpF/MQhJjxl3rXkRt/iwI9Wn\nRSxfHg5bizM36YUjtGs1FNHkey9tP0xDbHGLZalUmdNfRiD5jvrzEYSMdR8YqIyi6e8vj6G04AVt\n7drIfMJO0mnTokVER8fUkjY7BK1Vrl8fnYY1Pl57mXlD9mfcMZpxC6Bv41hcH8UJVEnzs1HmrDzg\ney9+nzVrqtNUiHbrbKL3SQG1rMBykIUO7vB1uM/sEBpgWeslnycJzbejkO9jsgttwogbzCzx6GPR\nOGQwTW6ekAQ+MJBMoCGtIHRvaKdhSBoDopz8nJ9fmm9GR6tTTUgtQU8sLZ3LhULWZcWK8G7RvIhj\nYiIKn9y8udqUmFWzzXp/WqSRqOV9ceM2rf+hFlNLo81Z9SDpvUL8NPVZZxO9TwqoZQX2OWziJEpf\n/HGWjtAbiZKkD70xyyeV61DJ0EKSNJnkCTkDA0RXX12dnVLvbmUTD6uMuk3TRNTUMjmlJtbXV30a\nlSxXnuMZkqpZOpf5SLQvIGQmYxOXFjzSCAh5QJtxRkaytWk9BJlUbh45Z9J+r51MLXkunGmjlnyR\nd2NjHUz0UuryvZzvs7RhVXFpBEKTwWdq0eF62l6cNrbYJ92HVMw0URc+6JA4PhZNJmrzRS2ENiH5\nUvumeXbWjWRMyqHTqHgRTJKq5UIXMln5+lhK9OyA1o7WZkiE2ozjCbGLRSMIslGLR5pnttrUkve7\n1/peU9/rTKKPa0Qfoadp9DSTMW4yaDL25YzxRbJkkXqlUzUuxE9LodLUkGax09EJbFvVZq2xscgn\noP0k3NZxJiRf5E/SINbf8zn6fO3oi5DSbajL8p39GZLO5R6OVqj53C7j45G5SJ45IIWXpP0dWe9P\nklZbJV23g6mllj0JScgiwPLnU1pnZxJ9kl04yZFa64BLIiRpatFpGVaurMzTru3rtaz6ccTX0xOp\n7yHbftxi5ztYpKen0rHIG4M4QyT/X+Z7yeK81QtZmsVa9kdcDiGZJiMUsaEX6rExf4bPdiARCdku\noYyQWTTHNPenlVazSKF5mjnaAaxtZglEqPUZWpP1jInOJPqQWSBpAchDnUsz0XUncwQGk5G20deT\n7yNkQ9bZE322/TTvqe3ZMlukXMhWrKiMgIkjXa3VyAHqO9DFpw3Jvt20yU/Kuq3SaAxscktDjvWS\nUx7klpQeQ9+Thxknq/8lzXxptomnGciSN6jW8rVfxjdXRkc7lOhDZoGQah2y5TcS4+NRPLUvTjuP\nTo8jPmkS4mvhwurc7nGQ7aaJV5s4BgaiQzVkfXyHinO50oHK0siaNeXPZb192o9cALjMWkxzIROS\n9EXEmYNq2cAjn50HuWlNJM5/42u7pDJDEn09m740Gm3iaaa2IJ+Vp4Dpgy8j7bHHVp/w1rESfZxZ\nQGfHqyfUqlYbZalUvTWZMx02wzmjn+9cmeTTOGolibHpRp8J29tb3urPz/Gd0uSr9/BwdYSKXhDl\n39zXExORaUgfv6alWq0lhGyYemxkib7yxeen8YUw6k2FEIpkCUnQrK0kme/k/XFb+WvdkR7XF40g\nxEZoC1nGVK0ae5rnyn6QY5FJXghgnUn0vgHhk7CSJlOWDsvyf22jnzWrTFzTppU3tOSh+ocGkXTM\npjnaT5YpSaxY9GfL9MWxFwqVkrzv/aS93HexFMJ57bmvWUrxLQDaZKW1gDRRUqHNY7721Y7bgYFs\nvhBum1qjKGrdWZuX5FzrXpWkOdUIjbsRaUmyjCn+Tr0aRei5cgHXgRQ8J6dPbx+iB/BVAI8A+HnC\nfX4V3LdFOknqzdphaf7PE1ESpSazSy9tjKShwTtoOeFVmg0nIRILtaHMZ+NzCPkOIJG7ZYFIK5BO\nUC2p8qLlM+nIe3UUU1xUU2hs8MSJM2/I786fXxnK2NNT1lZCjl9ZTlZyS3Mqlk5Zyya4LCGvcahl\nkWplBE6e2kLayDuf36ye5yc9Vx5ows8Tc6WdiP4UAMelIvq4RgAqt0iHJlPWDuPPedKEBk+SxMrE\n5tsxmacdUQ8wloh9aQJCoY4DA+VQvZA5QGeDDLWDPMTk4x+vbA/O6x56d13WwEDyzt+hoUhtHRpK\njpKSoYT8Tkn2Z20u4efKg0f6+qJ2z7Nfk3LC6Lh+nSIiFPKaFVkWKTa5xfVFI5GntuAL1Y17VqMj\n/nwLiTRxTt3fNkRPEYnPrYnotYSVZrOQT02P28GnGzSO/HypQ7U0KjftpFX3s8AX3SJDDFlqDR1A\nkcaem7RYynaQG5X0QhgXY1wqVSZYk6av0P2jo5W7dUdHw3Hhul91/qS08c+sUUjTkjSb5Wkf5n7R\np0RpgadQqHZuN3u3qCRG7otmknzeSBOqKyF5Jo0jPKkszTmhHFwqYKU7iD7UCGkbLk0oXZaVWfoL\n5CQ74gi/oybPRFfy3eRCNj5eOeGGhqozQcrnpt1yHacWczvw/302/SSpWauhadonSzoA/Z4jI7UR\nPddXStRxSbzqQWghDkn0SfsMGgndF3ysYaeiFlNQWsEpj/oEuKQjiX7ZsmXPXDfeeGP9jZUHqfnu\nl06SJC2gEVEHcvHTKQ6UDS/ow0gTRZMmAZk2caQxIfh2q6ZpnyzpAHyaXT1phLnfpb20EeaKOMef\nb6dus8OLGUmmjk5ELUJlI30Unjl2Y7FIyw4/nJZdeCEtW7asM4k+d+RFavV8J087Yqh8bSpKItxG\n1ClLmVkXBgnO6ijzcifZ6kNmu3rQqH5tlHDQCMi+2FfRzP7yjLksRO+i+xsH51w/gO8S0Z/E3EMN\nqcfkJHDHHcCSJcDMmfmX3w6Q7wh0xvvm1S/d2L/d+E7djBb2l3MORORS3dtIonfO/TuApQCejSjM\nchkRXeW5rzFEbzAYDF2KtiH6tDCiNxgMhmzIQvQ9ja6MoTHYsQN45JHy9dhjQKlUvp58Eti9u3zt\n3Qv09AB9fdE1bRpw4IHAQQcBBx8c/Tz0UGD2bOCII4De3la/ocFgyAtG9G0KIuDhh4G77gLuvrvy\nuueeiNgbBeci0j/6aGDBguhauLD88+CDG/dsg8GQP8x00wbYtQu4807gttuA228v/3z00VbXzI9Z\ns4BjjwWe97zoOv74aBEoFFpdM4Nh34HZ6NscDz0EbNxYvn72M+Dpp7OV0dMDHHYYcPjhkall1izg\nWc+KzDEHHgjsv39kfunpia5CIVpQdu6MnrVjRxQw8Mc/Ao8/Hv185BHgwQejn1m744ADgOOOA048\nETjlFOBFL4q0AoPB0BgY0deKyUlgyxZgeNgfKpX0fw+IIvPLj34EbNgQEftvfpOuOjNnAosXA/Pm\nVV9HHplCgq6hvkBk03/44aiev/pVVP+77op+//Wvge3b05WzcGGZ9E87Laq3c1P1uvnm6KYTT2z/\nMMIa27FjUev7pvleu7RlPe/IY3doCLjvPn8ZjXhPVWYWom/4hqk0F/SGKd71qXd1NvKgAV8ioSz/\nF3jgAaJvfIPonHOi87jjUuTwNXcu0WtfS/SP/0j07W8+RXf/52ba88BE9WHkaVHPIRoxbb1nD9Hd\ndxNdcw3Rhz9M9IpXEB12WLp37O8nevfbdtJ/HHUePYpDog+HhqJdrr535HoknXVay/voz+Tf+ve0\nCdHqrePateG2SFtGLXXQ7xsa53F11N/z9VmGOdRQ1FoPnY6Cj9vMkkU3Sx1l++nzJNauba+dsakq\nIYne10jNGCBJB//qxEciM+XTTxPd+F9P0gfOnqBFC3YnEt5++xGdfjrRRRcRffe7RL//vXgOvyuf\n28pfGhpKTwClkj/Fc9z9aSZ6AHv3RuNwzRqiD36Q6EUvivKUxbWBwx56Pn5KF+LTdANeTDswLXxG\n5rRptZ/6JCcIJ8fTB67LvEg6GV2ahGi+A9zTQC5kkkCA8oEwvoUutHDVSl7ye/LcBZkafO1aokWL\nquvIz5Hzx7noJDadzjopYV6aRSoPgS9r6gJ+ps7rVE9Oqbhn6cSEgZTenU30vpOF8kwQFhooerWW\nE61UqsrY9+iCk+hfC+fQXx30fXrWgXtiSe1APE6vPvBG+tynt9MttxA9/XRM/eJSIielI/a1IRCp\nFaFzV/Wg8rV1DZNr+3aiDRuIPvMZoleeuYsOKDwRv/jhSXo1RumKC+6m3/7W8w5cnzSpn7m+4+NE\nRx1VWcbAQKQ+yTKXL68cczJp2SWXVH6fMzWypqUnYS2HdviS5TFJ8oJfLEYq0de+Vk6sJsdC1hTZ\nPvLi84NlHhs+98B3fKYUIPT8kZdMZ+3L+iiFm7hMtfwMbos1a2qXlmVmXE47naSFDA9XntUgT1/z\npcUuFsvZSNNopbId5HjyHSMKdCjR+yRKzs4XOjczrsFqOWVKH/wrpLS916+lLcXn0j/hg/Qi/IQK\nCEvu03t30RlLd9Gn/+43dFPxZNqFYnoCmJiolORD0kPoXSR59/aGpWH5fUkuo6PVk6BebWrjRnq6\nOJ3W4xT6qPsEndS3Obb9AKLjj91NHz14Bd2EE2gPXJmkh4aiuoQ0HK0J6II1YR1zTOXRiYsWVY41\nLdHzKVly4ZBlynMTEtqkYnE55pjK5/T3J5+BUChE9Vm7NiIU/nxoKD6romyjwcHyePMliwuQzDPC\nkDR1rVnjr3OxWNaESqXqrI/69LaBAX+dly8P1yEJcnFmwY1PN2Oe4fz+ss18KYNlgjtfplyZRI/n\nn6/suDHB/dvfT7RqVXlM9vZ2ONFrU40+SWhsLHwQtF5N06avZalHqsiC5HYU9qMf4Ex6n1tB/Yc9\nGTvnjumdoHPdF+m63tfQU8UDymmEQ2eUyvrrOspB7xzRRz5CdOSRyUcqShPC8HAkjTIJ6WyIV1zh\nn8DDw5UHmshjzHwmrTSQEtTURPjjv19H1/a8ns7F52kBxmPb9jA8TG+beQ1dc/5PaBtmVk4ELU35\nNAGuOx+mUlG4cjDwYSs81iYmymfzshQaOs8z7bkJuk0GBysXpTlzooPf4xpFLvzyrN5iMUrLHKcB\n60WGx0hPT7VEv3lzeSwwafX3lzUbLfHKBSdEyHrsjo5WEBgB1Yev+M484DonHSdaKlVK4nz4TmgB\n03MlKXGZziIr2z+u7LgxoYWUwcGoXCFUdCbRhxpYTyBJ7lLyZxKMM/No1ZHztwunykO3PkRf/dCv\n6c9f8RTtXwiTu8MeeuGR99Cn33oH/XzTE7R3m2dx0rZhX6f6JHIpMS5c6D+gw0OeVSYESWpS+mJV\nfNq08n3SLqtNGb5y4qBt/txfcqFeu7Y8aAsFuuuDK+lydx79Ga6nXuwM8xp20p/helqO99M96K8+\nCISlqZ6ecr+yZsKLIf9fSvK+McimH+fKZWjpmRfGlSurx6ivnXTbjI0RnXdeZR0KBb+pJOnSPoc4\nAcOX9VRL14VCeZHr6Sm3A2cP9Zl+xsai08U0ccfN7VWrqt9FEn1o8faNR1k2E7rWypjs5Uldcfn9\nS6WwkCmFAS578eLonAr5vGnT0mnFLOTq/metSMzxziR6nSu8VIo6iAeaNiPoA3PlQEuTvnaq8/cC\n9DMcRx/HR+gF7pbYeTQT2+gNuJq+gbfS73pnl/8xOFhtg5R21ySpStvCJyYiKWdkpNpGLA95kANQ\nawJz5lQ7j/m5+r7NmysHqjzcgidimsM2pNmIpWc2tcQtZoODFRLXtv7n0jUrH6O3vflpOrTnsdg+\nWTJtnC50/0T/jRfS7uK0slmA7aOh4wnFGKgiSp68kqwKhUptaXS0+jxP7dhNisbge4vFSql8wYLq\nRci56LhGNunosa+PYvSRk68N+NxZNgH5HMO+OSZPxNJmVT3GpK2a6yO1T/2u/f3+duOFaXS03P76\n/XyLQmhBZyuBNMH4jqFMstvzeAu12cBAWdBIa2bSfcCa5sTEM+/TmURfKESTXdrPdONp8mKziF6J\nEwb5k08SjX74JnoPvkxH4YFYIpk37T46r3A5jfW/k3YOHRc9xxczKW2Q0m6XRqqKi/zQNtQ4R5Vc\nBOXh4ZpkteTPtkr52ehoZThXko8kTr3WC4Q2HWhVV2hne4q9dBNOoI+4T9JxuDW2r2bhd3TOok30\nn4U3RCaeJL8ITyhuZ0kc2h787GdXqud87xVXVC6CcYeX+46ClO0wa1ZE6MPDkVQsn3/MMfFRH1dd\nlT0sU9qp2eE7MBA5fEMaxcBAtfDx9a+Hj+js66ssn8e6bDdNyr4zeZMWLnmf79B51lp7e6u5wne+\nsp6HIbu9XnR9TvVazZ2sHbGwy3WYGpudSfR8XX11daSE7DBp89YrccwguO8+oi99iehVryKaPn1v\nkCyKRaLTT9lF//y+e+nOzZORSUae9MLP07Zelu6uuKJShedzXEPk6DstSkd+jI6mO+RBT4bQ5JDH\nAeoFNWQCi/OR+KQ43W96sZGLEPsEpFTL0TA80QYGiAYH6YGefvrSUZ+gV565K95njZ300v020Mgn\nHqd77yV/nXUbyf7TRPulL1VKWXPnRouDDBrwmU1YYmZp2be4+zRAeUYut+FVV8U76oFszsnQOcgh\nMwkQaRu6n3t7/aZJfYSjnMPS5CrHHgcD1OP81/OTI+g2bSqb2dgMp4lcjns9D3WEkdZoWNvQpr1a\n3oHhEw6mjhDtbKKfLUwivMLLFS2J1Kcm8q4/lGj9eqILLiD6kz+JnxsHz3ya/vqvIwvFH+7zqNc+\n6WLNmqhuvPLr81vXrEk+wk7ba0N203oGSghMcOPjlZOiv7+sInJEiVa7+fu6nTRx8HvHmU+k+UIS\nDEuAg4OVzlBR1hNPEH1n1VP0zkO+RYfjoUT+u+h9Jdp41Otpd8HTruPjZQfY9OlEX/hCZQGrV1f6\nFTTRXXll9eKhzSCScHz3ykVg7drKhQ+o/jskqYSOzZSBB6EImTTl+z5nkyI/Z3y82vcAlPuS221k\npNpHoImtlg1zLGRpc5b068m+LBYjIVP2l4xe0n7CwcHy+PT1qX52rZCLioygGx/vUKIvFqPIEjnZ\nOf47pdr2u3sm6RtHf5j+yq2mg4rbYsfrELbQB/FPtL73JbTrPiGNaMlab4TRqp1U4eUD2JElP/NF\nEoRMTr539tkL60HI3DI6Wh0vHKe+ssTPPpUsxwT6bKrFYnkSygUgFNdfKtGe74zSLb0n00fxMTrO\nxZt4DsUj9DfuG3TNP95O29beHI0xbY5burTy75GR6D4dDREXMqe1HF+EiO4PqV2EpHfdXzI0MyRQ\ncD+zFC3L7u8nes5zqsevlrj7+iJi6+2NHI7sw2CTIj+nUPAvSsViZPbRQoxc7OQYYjLOegh6aJ7E\nOXV5fMlxx1q6dvZrs14tppm07xDYLEVjYx1K9JoUZYSJrwFKJdq9m+jmm4k+9jGiE04gci5skpk2\njejMM4ku/4d76NeFBZUDeuVKv1lBOnyZZEIhmlKiD03I0dHye9SyO69elVYjNPAvvTQ8EXxhZ9KW\nmeUcWFaVtbOMIyJ82k2cs3NigmjFCqLVq+n+hWfQFwvvpVfM3EB9feFx0YOn6dTpt9An3Ufop3h+\nOWYfKJNVX19ZqpRSoHaA+t5PS/Rp+y3UNwMD1eaBoaFK56SW3kO2fR7/bAeWRHLllZVhtnPmRH9L\nc+T4eOUZvqGQ3UMPrZSi586NxpiUkHU00+zZ1dpTmg18cfNEbnp0LrrnyCMrnzFnTuVYk74EjmuP\nm9d5QC7MOnqHr4ULO5TofQNQr5SlEv168avoS4Vz6S+fdT0dfFB4AgNEc3oeove4lbSm/+9p8kFB\n5En5KrTq3dNT3qAjY+M5bphNFOPjkeTHUs/gYFja0nZq+XmSNFLLtuqkDWQcjz08XB2NwmGYobCz\nWnYuy8EsyYF3PMqQxYmJShU+9Cy9j2CK+J644Sa61v05vQNfSTTxzMLv6E34Jl2Fv6GJwhyis88u\nOzrlYq5DXeOIpxY1Xo4Plmil+SDU5to8IZ3pOrpHLh5609f4eJTPQtuopSlBhuwOD1c6XeUiuWpV\nVQw4AWWzB9e3YgVWtnxJvnG5h+LGh9SwisXyYqZ3AutNUHn5RdL2e8hRra7uIPopSeXRb62j//jy\nY/Se1z5MzzkiftNSobCXThn+A336HXfR7Vdsor3FQIfz5NMbS6Rkz/fJASylEl/87+rVleXzd7VE\nIssPRSuEQvP09nH+XygcLGQikjHAesMPvzdHYYRCw6TkmBRhlLQxjCcfR0foXdFc/82bK23pUirU\n+X2WLy+/49Rk3gNHN+MF9BF8nI7H5qS5RMP4Ob0fy+lb+HN69OjjKjcXxe1QrgeyXaUDUTo8tebp\nyycjx93YWFSGlE7lu8gw5s2bqyVf6ayUZbN0Lz9773ujMkZGon0gbMuWqSf4Cm0ukv4MaQP3PV+3\nXZIzXC+aExNl0ud75ULqI925c9OFHCf1sW+Oc3RQNxP9gziCrsYb6L1YQX+C2xMn4pFHEr31rUT/\n/tWn6LElp4ajH+LUPJaa4rY/64sdSfKzadPCEy4NESRJ7XIB0e/JpMhx6yxl+KJnJDHFJbFKMkto\nZ2xoMfBJYJqYgUht1lKfjHzo6al01kvHYyjqhxfFQD8+7I6gf/3La+kthX+jw/Bw4nh7Lm6jf8Bl\ndO2c99FjvynVp2lxO/iyFHK7sgbpW6ilaUX7kOSYlgu4FBakH2bhwmg8syQvX/rCC8v18xGtb0OS\nTzP8+Mer7/v618sa8sBAJCyFxl2plM4+rjVyvndwMNyea9dWtgdH0/T0lIMu5Jj8+tfLWotzfjNz\nXJ/7hIMQ38gQVfFZRxL9O3Fl4lZ4gGj/6bvoVSf/gS77zHbasiXKnFjVSFLNTHLilkqVkk5IDdbq\nG8f76iihkZFqKTet3TpkzpGIi8X22Q61jVgT/+rVlQN28+Z0Eqok1jgnoyYGlrKJqsM8tSSpbfS6\nrXkTiWzvFDsKqxbsqe/sgaNbcSz9Ez5IL8YNsTt0oyrupeOeu5vOffZq+rfiOXT34ldG4bhpoSe8\nHk96YdMLtc+HxOWyJqB3Z8s5odM5SE2Kx4TeuyG1PSlM6MbhVADys6uvrk6R0NdX7utCoVoY8KU2\nYeKLM5mETCBSg+jpKYdz+rTLSy8tazqLFkX2cn5vveDIjYxJiEvFoscwh5xqbay/vzOJPjSZithF\nJ2EjfcR9kn487+2089EECTNJgo+zVcu4bo6nZinaJ40MD1eaEjgqIW0oaOg9ksJHQ7HY2qEtB7Xc\n5CO/rwfs+edXToRQRIF0bHE4qa/OmgS01iTfV0c8ccii3Ngjy1q9upoodRswGfj2PoQcXVPXE5hB\n1+PP6KIDV9BJ8x6hInYlCiKHHUb0utcRXfLxHbT+i7+gpx5J0OCkzTihPjR7dmX+IiZw37jV5fPC\nKPtI9qFvAbzwQv/eDT1GfdFIbHqRUjJ/NjISb4OW45Q1QZmWQ4ezhuaIbwexLymdry68mMhFV4b5\njo+Xhb++Pv8mrxCklqsT0G3eXLm4T7XZ769ZR9fN/TtaVvg4vXy/dfQZd1FnE31f7246ffom+ig+\nRmtxBk1i/0h6TisRh0gyyZbKhL56deVOVN5hGpdQiW18OvNfHg7TNO/Jk2fVqkrncMh8Jb+vw/gW\nLqyenEmahY/AZV1DvoqQP0HX15fVz6edaO1mxYrKsnnvA/sCfDlWvNJGJJ1Oupn0A5xJF+AzdCI2\nUbEQn54aiKJ6jj92N73znVFo/saNUfw/EVXG7scl8Gc7ufxbjk+W3iXxsJASF+LrS1UgHZ9pBRS9\nU/T88yudxj6HrjQv6QWcJVzd52nr5hubUgOQdSoWy7/39UVah3YcF4vRJk451kZHo7FUKEShpr4d\ntCFoH5jUjOfMod9hFv0QL6VL3AV09qm/pXnT7qsaEi9Bh4ZXfurtd9GG57yVdhRnRETDDZA1I2CI\nLONyy0jVUA+6Cy8M2+k5ZYN8fpJW4atnrQ69kG2R43/5NCD+O9Q2q1aVyYN9D0mOJllnSeC+POjS\nt8BmmlD6Y99iLZ/F4YXaHh3nl5ESnq4rL4xxbD04WH3oxrRptO3OB+mH1z5JFx/+RXqZ+wE9q1BK\ntW4UCkRDi3fTmw/4Dn0W59MNeDE9XDiS9vpu5mio0P+4b7RmtmJF9LkvzXJok55MvZtVC+Vy2BTD\nZjXdd6z5STv62Fi1b4nJUAtWcZK8rI92zI+MVOe/1/O6UCjXSQo/vb2Vi+DwcHU4qm8xS+CiPXB0\nT88C+vYR/4s+WvgknTXjhsSULHzNxLbOJPoqZ8fVV1dHGsSBVfO4Xag+UpBOSd3xHBomifSYY6Ir\nZE9Ms3NXE1wtMfW8sUSTlC8uWqqHMmLHt1DoXb5x+XV48wiHk8oIGd8CLXMYafuyjniS7yodj0kL\ng2+hCDnG2bTg2+06e3Y0BjmqxGfDVfsq9vRMoy3fvI2uXLGd3n7wtbQYv0w1afk6BI/SKVhP78GX\n6fLC+bR21tk04Y7yLwBAtPgsXx6p++eeW03oRFG7yYVi8eJqR2Q9G/N4DK1ZU23e5ORk2mzGkVyh\nVAQmb08AABYcSURBVBQMvRNZHmCSVD8daqsl7lIp0jx0n3PZIQ3+wgujd9X7KWL2ejz9WIm2biX6\n1reIPvlJoje/8Wk6fr+tNAPxh/FUyBXYQSe4W+j9Z9xB/4o3068wv0OJvurNppU7KekczSQVVd7n\nswdLJxfv+nvve8uhYXLzRk9P5e9MBGlVt5BmkUYT4HeIyy6oF00mJb1D05d1j51TV1xRaQf2kbC2\noXI7yGfrQzh8u45DEU9E1aGftYazSaevdIz7okWkhMb18e1Slbb/mAXoD/eV6Ec/Ivp//4/ozW+O\n1sQ0mQzk9Sz8kZ7v/ofeiNV0ET5FX8E76EYspft651Vv8JLJAYn8O7Z9bSgFlbTapR6LPnIMLZRp\n0vbKMaZDf3UUl3wHadJcuTJsUtX9L8OjtQYHlPcILFxYaXIbH6ftvyvRL1fdSv/1n0/Sig/cQ+e5\ny+k1+A4NYiv1FJNNfPKaPm03nbD4cfrbd+ykL/39Vrq5cFJ01GaxWLEvpzOJPmQe8U0uDd8KnLQt\n2UeuUkINDcxFi8oxrtOmVd+bRELSPqc1gjQqsy8Ea2AgihAIMQhL9JrUQ+Tf01MmX52wSyYx8y1Y\ncWfV6onL8eHSXjoyUpa4dFlz5mSzg0ri0mbAUql6R+5HPlId5cJSu2yrI46oNkv4zkwI1PGJJ6J/\nf/4fH6Z3zFhFJ7ibE49aDF3TsIMW4Zf0Mnyf3okr6eJT1tJXPr+dfvADoi03P0HbvvqflcECQ0Nh\n01ZcJE9oLCaZvbTz07eohrQ5rps+x8A3z7WmrMOOfbmjSqXKnDVygRAL+x44etgdQf+D59MavJq+\ngP9FF+FTdA6+Tqe5H9NRh+6oqe+AKB3HS6b/N/3vv52kf/u3qM92Pfd55XqHDnLpWKL3pUDQL8fq\nss/GLQfTwoXpUrbKQRSy28kBOTJSTQ7aM59WCvJJJGmg31UmIdNtNnt2NNHYXs+TTptZ+vujhUJL\nPtI/IVNCxNnDQxIuw5c7RBMBm5dk23JCpzQ+G01cPk3Al6BMR4OwRjIx4Y/eiNPO0kqrU++0985x\nun/BS+j7eBl9FufTO3ElvbDvf+hZ+GPNJMLXTGyjRT130WkveJJe/7qn6dy/eIguvmgHffGLRNdc\nQ7ThS7+gO4tD9DvMop3F/eJPRZOQzmRuA/ngBQuqD7HhEEW5AdGnDYUWyhDRx4Uds8YuFozt26Nu\nve2/n6C1y++gb37+D3T5P9xDH/4/O+jdp2yl1+HbdDJ+QnNxb2KYbZrr6KOjFCznnRcpWes/91P6\nPZ5dvoEjorTWG3MATRaidxQRbUvhnCMqFoE9e/gD4JhjgAceAPbuLd84PAz88IfAK18J3HEHsGQJ\nsGEDMHMmMDkJ3HIL8NRTwIc+BNx5Z+X/4zA5CaxaBbz3vcDu3f57BgaAyy4DXve6qJkZ/f3AxASw\naBFw+eXA4CBw331RXX3P3bQJOO206Dm9vcD69cBJJ8XXbcuWyvIefBA49dToOYODwMaN0T2nnFJu\nrzlzgJtvjr5z6qnl9rruOuD++6PfJyej/91zT/SdoSGgUADGx6Pfr7suauutW4G5c4F77436iOu9\nZEm5XPmuk5OVn/M7zJ0LfO975Xbmcp54AnjZy8p1LxaBa68F3vAGYOfO6G+g8tlxbabbeO7cqK2G\nhqLxAAAnnxzViTE4CIyNlcdWfz/w4x8Ds2dHn7/0pdXjYcOGcvtw2Vu2pOtfXccvfAE499yq8Udz\n+/HIb3fh7sIC3L17Lu6edSLufvG7cPe9Bdw9vgu/L00Pt0ONmNG3GwcdsBsHzyrioL7tOOjIGTho\nVg9mzgT23x+YMQOYUdyJGZ+/FPs/+hvMwFOYUdiBGe94E/Y/+hDs9+XL0PvIb9FTJPTs3oFibwE9\ne59Gz7y56KFd6Ll7HD3z+9Hz7rcDF1yAvXv2Ym9PH/Z+/4fYu3Ax9r7yLOy58y7sXTSIvdeuwd4Z\nB2D3bmDHDmDHY09i+zl/ix2/eRjbj16IHZ/6LLZjP+x4fAd2fOYybH/ocZQOHcC2s96Mbd/+EbY9\nTti2/5HYNv/52DZZRKkEbNtGePppl2ubFQqEo492mDcPGDj6aQzs9xAGTjwM84b3w6JFYnrwXPj9\n74HXvrZcQLEI/OQn0Zw59dRoTM2fH83NnTurH9jXB7dzJ4go3YukXREaeSEkQbPkx5EWnGQoTrUM\nbUYIOfrkiUi+UC++rrrKr4IuWFCZTCpJmstqj9fllUrVh11weN1RR5XTM/gSTcXl/uA213nnWetJ\ns9M46R1kNkJtMpOaEjvBZTtzRsNQCGdcmKZ2kGub8RFHVEeDyGf4bPnsu5Db9NOkgwiNA59mA0Q2\nWZ2nnyOYANqGmXQrjqVRnEVfxN/RRfgUvRXfoBfjBpqPX9F0PFW3NGoX0cF4jIbxC3r5zA30rr9+\ngpad9T90ZeE99AOcSXdhHu2cp06Z82mf2q+1YEHlmJemv02b4lNJ9/RQRN+dZrrhydPf75+gsgF1\nkiMZLsbErc0TetL5TDU9PUQf+IC/YWUebW0L5wiHtNEztdjj9a5IqfL6km3x+8mUsTqCRkdDJDm3\n0tY79A6ynTlMTtZTkpmOiBgdDadYyBKmqbMkyjrp8eRrIzkxffbgLBvlZLI2rh/HZ7NJTT93cDAy\nh6RIekWIjsp8tHAo/XzlJrrhhmj9XH7JdvrQm+6hdx38n/Qat4ZOmnEbzXvOHjrkwKepgN0tJ9Vm\nXL3YSYfiEVqCX9BS/IjegKvpXHyeLj74MvrCZ7fTf/wH0Y03Ev1qw8P05Oe/Fs0peYhQyB+lhScZ\nKaQFNBmv7/Nn+ZIvinnfuUTPAznpLEgOc5Kx2L5UuXFZFUMbfrTdUf6fbZd6B+PISCXppJXW40LE\n9KKlQ0Dl7kAdWXHllWGC9aV36O+PdlzGSR9Zj6mT5WhilQuKT6tgyZ+jHOJ8GaHFNSTl+yKS5LM5\nwoo3nPlSJ/AGHH5m3PGBce0S0v6kRCefy2cc6CyUcZutJNnI5/oCCCYmaG/fdCrhALp/2jz6+XNe\nQ+uLS2lN/9/T17/0FH3hs9vp0iM/RxcXLqYPHvo1et9b/kBvP/lO+qszH6NXzxijl7gb6KS+n9Gx\nuJWW4Be0CL+kebiL5uJeOgoP0OGF39Gsg3fRQTN30QEH7KW+vqirZ8wgOuAAogMPJDroIKJDDt5L\nsw56mg474Ek6EhN0FB6go3EfLTz8j/Tc5xKdeCLR6acTvfykP9Dr3LX0JnyT3u6uonNf8wB94OwJ\nWnbhDvrcp7fTVz90F13zr0/R2rVROvM77yR66K5Jemro+eWQVe1XuPRSv6/A53hnIUCGWusFIE5A\ni9P+NN9xuLlIMNiZRO8L+/I1tE7WxI0hQwh9YYu+jI96swg/zxe9wrsQx8YiZ69caTVBpsmvE2fi\nkQ5bufCFFhIZK80JlmTMum9HYdLO1rQ7X5NQKlVvLpERUTqVwiWXVO4UTNrqzvsApHPb176+9xke\nrtwJrS/tnOV8LJJY43YgxyGN9qcXydC+iQ9/uJqw+Jo9u3J8+vYUMHHpOnGOFV+iPnbOS5MnHzSv\nFxK96MiMknFtJceGbz+HnsNS0IsLd9bHBc6eHc0blpo5pFvuMveFDo+PR15W5yJOkFqgdGiHBDR+\nhzhNNcYy0ZlE7zvg2xdDK8PxZCx26BDtUsmf8VFvbmIy2LzZH3lTKJR318lBrE+sT4OkXbpxqVh9\nA0MeiFEoVJ67yQNS2pF1+2rJTg600P+zvKtPlQ21hdzP4DPN6fpzBIeU/JP2KuiFPURKV11VJpre\nXr82oA+FTxoL/Exp7pE7Rn33cz779euJDjmksg5xO2ePOcZPjtIkwKa9wcGoDnFmTymA+A4G4cWI\nd7suXlz9f52TKSnyjNOLaGGK25CzrKY561V+X48xqZVJwVNK+rLexWL1oSV8mIqPW2rxb3G9Vq2q\nfJ+pcNTOJHpe6bihQptvJAFxvhK9KUPbu3wbdfQCwmVqNVhLSpyeQf6fNxllSdWgB5qUQLXKnrQn\nwLfz0Ed0On6fbcL6lHlZT5m6oFaJnnPdMAnoumupjUlTx0JLyd23kzlpAxq/T0iz032tk8Jpks/a\nHlrT0EnY5Nm82vS0fr2fzOOuBQv89QttFOPUBaOj1cTJkr3UMEImI7n4jY5GO2bZ96YPo+e0A1nb\n0LfHg/tx6iB5b//Lcxi0fyQuvLpYLM995g69GDgX3vyXVhDwvafUODnMeHi4vYgewMsB3AngVwAu\nCNxTOfD5yC7pjJI7NH1OxDj1WcZua/V3/vxwvvI5cypXUx70o6NlTYIHMFBtxgl1oF7xfVKtJOWQ\nVMvl6aRhUtPhSaBzoXC+GK01heqc1Qkrvxu3b0CnO5ZRUjpZlq6/tHv6JnVczhwppbJUyOOP6ypP\nExsaqkwaxu2XBb5Yb/1ePtPD5s2x8dSxl9YGN24ME72cEzIrKydVGxhId2C5jJDTkSR6sfBlPpXf\n1eM9zvckzZVSa9N9HzLtaMHGl8FyZKScE8i3e9YndKRJJ6G1VV+KZTUG2oboARQA/BrAXAC9AG4D\nsNhzX3WIHUB0+OHlbINy9dbELDdSJSXE0p0jiZslerb/84kzcmDqre96oLNjNtSZPts8h0ZqAvJJ\ntXqAKjPPjYVCZeQHf18TxcBA7UcAprGvMtIcphKyRWopTdafN3j5EnH5FkOtJfb2Roufzzwh2u1G\nDlcdH4+et2JFes3N13ZpQiq1v+nZz66+R96bhuilhDgwUBnax/NAkpQ+LD3Ldcwx/lPAiOjGG2/0\n58Hn9tc+G5n2W5vsdDRZ3FgLbUTS2j+3lUy4JneLy7HJwph8F5naIW06Cb0IcZ4MzS1Kg2onoj8J\nwPfF3xf6pHoA/sMLmJD0kX8ijriCfH2I22nGKz93JN/HE5s7cnCw8vBlXa4moDR1EZEO3nNIQ/XX\ntkclnS176UvDNnAtcYyO+sMy4/YdpG13/Z2QRM/3bNrkX3jkpOP+0M7QOKldfo9PDZIOfS2BsTQ5\ntUt4GY+To46q3SHte1cuY2IiGt+rV1cml2OfgC/EEiif7zs6Wn1E3yGHVJvoZP4inlejo+VxLbUX\nbZZg4Uc/P23SHj6Uo1SiZe94RyUB6vbXEWQ+W3up5I90irOFy/9J7Szk5NWCgn6etunzdfjhZW0v\nrSAl52ic5lYoEB188DMc1U5E/5cAVoq/3wJgxHNfmOhZndcdyGpWUp562cGLFlVGp6xe7TfbsIom\nP4s7m1Kq9HGrt28g+kIjQ9/x5exQ7bbs7LPDm4cGBys3Huk0AJyFL/QOvlDINJk2fbl9kvoqFI2k\nzR2szck6aqldtq8+rYfLYNOhkiaXOVe5sKR557TQi5Jvg4xPstamIzZl8mLqcwSG/Bm6PlqLZC1Y\nOr1981QvwHxJv8uxx0btyQuwz//jk+iTiDvJZKffL46AQ1q3TxsL2fTZDJpWKJJla82VNQnPAtCZ\nRF8qVZpIensrJah67cSbNvmP/yqVqmOl589P5xCVEyNtLLVPoktKCSy/o78vJeahIVp26KH+Qer7\nvn73NNEKWSX6WlIwJ6V5jquDnpC+ftSLJ3+mF92REVp21ln+oIA84PPN6LGoJ7g81CNNu4U0uqT3\nCJHiihWVWhEvLlorGBqqNHNN1WOZHge+estImzTEnbU/4gSKuPHqm3s63JrnkT4EJ02SRam59vRU\nni1xwQV1EX1Dc904504CcDERvXzq7wunKneJuq9xlTAYDIYuBaXMddNooi8CGAdwBoCHANwC4E1E\n9MuGPdRgMBgMFehpZOFEtMc59z4A1yOKwPmqkbzBYDA0F22RpthgMBgMjUOh1RUwGAwGQ2NhRG8w\nGAxdjoba6A2tgXPuxQBeDcABuIOIvtLiKnUknHMfBXA7gGEi+nSr69PJsDHZWrQF0TvnjgLwWQDz\nAOwB8CiAUSJa2dKKdSiI6Ebn3EwAM4hodavr04lwzp0BAEQ06pw73jl3ChH9pNX16lTYmMwPtfBl\nWxA9gLlEdLZz7k0AQESrWl2hToZz7mhEGyrmtbouHYwXAfjZ1O+3AngJACP6GmFjMldk5sumEb1z\nbgaA1+uPATxBRN9yzi0CUAIw0Kw6dSuI6AEADwD4bqvr0sE4DMCTU78/AeCIFtal42FjMj8Q0cas\nfNk0oieipwD8S8wtb0GkjpzpnCsQ0d7m1KwzkbRwtqBK3YYCIrUYAIrid4OhHZCJL9vFdAMARxHR\n4865RxCtUr9udYXaGXELp3NuLyI1+ZmPoq9QsRl16xI8AmD/qd8PBPD7Ftal46HGpI3H+pGJL23D\nlMHgwZQz9k+J6BLn3CUAbiCi61tdL4OhFlgcfRfCOfenzrnTnXMfbHVdOhg/AnCoc+71iKRPI/k6\nYGOytTCi7048H8BNAGY55/ZPutlQjanksf+HiK4hogtbXZ8ugI3JFsKIvgtBRFcA2AWgQERPJt1v\nMDQaNiZbC7PRdymcc28EcAOAbUS0u9X1MRhsTLYORvRdCOfcXyPa4LMXwN9ZqKqh1bAx2VoY0RsM\nBkOXw2z0BoPB0OUwojcYDIYuhxG9wWAwdDmM6A0Gg6HLYURvMBgMXQ4jeoPBYOhyGNEbDAZDl8OI\n3rDPwjk31zn3i4zfme6cW+ecc3U892+ccyNTv7/XOff2WssyGNLAiN6wryPrjsF3APgWqZ2Gzrla\nc6t/DcD7a/yuwZAKRvSGjoNz7lrn3E+dc79wzr1LfD7pnPukc+4259xG59yhU58POOc2Oedud859\nwjk36Smz4Jy71Dl389T33x14/JsBrJn6zunOufXOuTUA7kio29udc+POuZsQnUcLACCi7QDudc79\naQ5NYzB4YURv6ES8nYheAOAFAP7BOXfw1Of7A9hIRMcB2ACAyXo5gMuI6FgAv4Vfin8ngMeJ6EQA\nJwB4j3NurrzBOdcL4DlEdL/4+HgA7yeixaG6OeeOAHAxgBcCOAXAkHr2ZgCnZmoBgyEDjOgNnYjz\nnHO3IcpvPgfAgqnPdxLRdVO/bwbQP/X7CwFcM/X7vwfKPBPAOc65WwHcDOAQUS5jFoDH1We3KOL3\n1e1EADcS0R+msjZercr4HYDZgXoZDHWjnc6MNRgS4Zw7HVEWxBOJaKdz7kYA06f+vUvcugfl8a3P\nz/UWjUgyXxvz+O0A9lOfPZNbPaFucc7b6VNlGwwNgUn0hk7DswD8cYpIFwM4SfwvRKY3AXj91O9n\nB+75IYBznXM9AOCcW+CcqyB1InocQME5Ny1j3W4GcNqUGacXwBvU9xYC2BIo02CoG0b0hk7DDwD0\nOufuAPBpAJvE/0IRNOcD+MCUSWUegG2ee74CYCuAn02FXH4Zfo33ekR29tR1I6KHEdnob0LkO9iq\nvvciAHGahMFQFywfvaHr4Zzbbyq6Bc65vwJwNhH9eY1lHQ/gPCL6m5zqdhyA8/Mqz2DwwWz0hn0B\nz3fOfR6RaeePiGLhawIR3eqcu9E553QsfY14NoCP5lCOwRCESfQGg8HQ5TAbvcFgMHQ5jOgNBoOh\ny2FEbzAYDF0OI3qDwWDochjRGwwGQ5fj/wNoALj5Z0o4IwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10e116790>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt_angle = np.arange(-np.pi, np.pi, np.pi / 80.)\n",
    "out = np.exp(params[0] + params[1] * np.cos(plt_angle - params[2]))\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(angle, spikes_noisy, 'r.')\n",
    "ax.plot(plt_angle, out, lw=3)\n",
    "md.format_plot(ax, max_s)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By optimizing this cost function, the model has uncovered the above structure (blue line) in the data. Does it seem to describe the data well? Try using more complicated model functions and see how it affects the result.\n",
    "\n",
    "### Advanced exercise\n",
    "Is exponential better than linear-threshold?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 3\n",
    "\n",
    "We can also use more powerful machine learning tools to regress onto the spike count.\n",
    "\n",
    "We'll use Random Forests and Regression models to predict spike count as a function of arm position and velocity. For each of these models we can either regress onto the spike count treating it like a continuous value, or we can predict discreet values for spike count treating it like a classification problem.\n",
    "\n",
    "We'll fit a number of models, then calculate their ability to predict the values of datapoints they were not trained on. This is called \"cross-validating\" your model, which is a crucial component of machine learning.\n",
    "\n",
    "The Random Forest models have the integer parameter ```n_estimators``` which increases the complexity of the model. The Regression models have continuous regularization parameters:  ```alpha``` for Ridge regression (larger = more regularization) and ```C``` for Logistic Regression (small = more regularization). Try changing these parameteres and see how it affects training and validation performance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor as RFR, RandomForestClassifier as RFC\n",
    "from sklearn.linear_model import Ridge as RR, LogisticRegression as LgR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "nNeuron = 0\n",
    "# First lets have some meaningful regressors\n",
    "Y = spikes[nNeuron]\n",
    "X = np.hstack((hand_vel, hand_pos))\n",
    "\n",
    "models = [RFR(n_estimators=10), RFC(n_estimators=10),\n",
    "          RR(alpha=1.), LgR(C=1., solver='lbfgs', multi_class='multinomial')]\n",
    "model_names = ['Random Forest\\nRegresion', 'Random Forest\\nClassification',\n",
    "               'Ridge Regression', 'Logistic Regression']\n",
    "\n",
    "folds = 10\n",
    "mse = np.zeros((len(models), folds))\n",
    "mse_train = np.zeros((len(models), folds))\n",
    "\n",
    "def mse_func(y, y_hat):\n",
    "    return ((y-y_hat)**2).mean()\n",
    "\n",
    "for ii in range(folds):\n",
    "    inds_train = np.arange(Y.size)\n",
    "    inds_test = inds_train[np.mod(inds_train, folds) == ii]\n",
    "    inds_train = inds_train[np.logical_not(np.mod(inds_train, folds) == ii)]\n",
    "    for jj, model in enumerate(models):\n",
    "        model.fit(X[inds_train], Y[inds_train])\n",
    "        mse_train[jj, ii] = mse_func(model.predict(X[inds_train]), Y[inds_train])\n",
    "        mse[jj, ii] = mse_func(model.predict(X[inds_test]), Y[inds_test])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAl8AAAEMCAYAAAD6TdPZAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3Xt8VPWd//HXJzEg1BCIKIqEACoqUkFEBUVFLSpUodt6\nV6Td6lJXV61r7cW10l13rW11f6WtVdAiglrFtt6Aam2NoCCgCMpNrBdUqF0VlABaLn5+f5zvhEmc\nTCZkzplc3s/HI48558y5fDLzzeQz3+/3fL/m7oiIiIhIMooKHYCIiIhIW6LkS0RERCRBSr5ERERE\nEqTkS0RERCRBSr5EREREEqTkS0RERCRBsSZfZtbDzP5iZsvN7BUzu6Ke/Saa2WtmtsTMBsYZk4iI\niEgh7Rbz+bcDV7v7EjPbA3jRzJ5091WpHcxsJLC/ux9oZkcDtwNDYo5LREREpCBirfly9/fcfUlY\n3gSsBPars9sY4J6wzwKgzMy6xRmXiIiISKEk1ufLzHoBA4EFdZ7aD3gnbX0tn0/QRERERFqFRJKv\n0OT4EHBlqAETERERaZPi7vOFme1GlHhNc/dHMuyyFqhIW+8RttU9jyahFBERkRbD3S3T9tiTL+A3\nwAp3/3k9zz8KXAY8YGZDgI/c/e+ZdtQk4J83YcIEJkyYUOgwpAVQWZHGUHmRXKmsZGaWMe8CYk6+\nzOxY4ALgFTN7CXDgB0Al4O4+yd1nmdkoM/srsBn4RpwxiYiIiBRSrMmXuz8HFOew3+VxxiEiIiLS\nXGiE+xZu+PDhhQ5BWgiVFWkMlRfJlcpK41lL6UdlZt5SYhUREZG2zcwK2uE+Vr169WLNmjWFDkOa\nkcrKSt56661ChyEiIpJRi6/5CpllASKS5kplQkRECi1bzZf6fImIiIgkSMmXiIiISIKUfImIiIgk\nSMlXC/LZZ59RWlrKu+++W+hQREREZBcp+YpRaWkpnTp1olOnThQXF9OxY8eabffff3+jz1dUVER1\ndTU9evSIIVoRERFJgu52TEifPn246667OPHEE+vdZ8eOHRQXNzghgDSgpZQJERFpvXS3YzPg7p9L\nCK6//nrOPfdczj//fMrKyrj33nt5/vnnGTp0KF26dGG//fbjyiuvZMeOHUCUnBUVFfH2228DMHbs\nWK688kpGjRpFp06dOPbYY+sd8+z111+nqKiIqVOnUlFRQdeuXbnzzjtZuHAhhx12GOXl5Vx11VU1\n+7/22muccMIJdO7cmb333psLL7yw5rkVK1YwYsQI9txzT/r168fvf//7fL9cIiIirVbrT76qq2H+\n/OixEMc34OGHH+bCCy/k448/5pxzzqGkpISJEyeyfv16nnvuOZ544gnuuOOOmv3rzpJ+//3389//\n/d9s2LCBiooKrr/++qzXe/HFF3njjTeYPn06V1xxBTfffDNVVVW88sorTJ8+nfnz5wNw3XXXcfrp\np/PRRx/x7rvvctlllwGwefNmTjnlFL7+9a/zwQcfcO+99zJ+/Hhee+21PL8yIiIirVPrTr6qq+G4\n4+D446PHxiZQTT0+B8OGDWPUqFEAtG/fniOOOIIjjzwSM6NXr15ccsklPPPMMzX71609O/PMMzn8\n8MMpLi7mggsuYMmSJfVey8z44Q9/SElJCaeddhrt2rVj7NixlJeXs99++zFs2DBeeuklAEpKSnjr\nrbdYt24d7dq1Y+jQoQA88sgjHHTQQVxwwQWYGYcffjhjxozhoYceyvdLIyIi0iq17uRr2TJYvhy2\nb4cVK6LlJI/PQUVFRa31V199ldNPP519992XsrIybrjhBj744IN6j99nn31qljt27MimTZuyXq9r\n1641yx06dGDvvfeutZ46/tZbb2Xr1q0MHjyYAQMGcM899wCwZs0ann32WcrLyykvL6dLly48+OCD\n/O1vf8v9lxYREWnDWvzcjln17w+HHholTv36RctJHp+Dus2I48ePZ+jQocyYMYMOHTpwyy23MHPm\nzLxftyHdunVj8uTJAMydO5cRI0ZwwgknUFFRwZe+9KWCxCQiItIatO6ar9JSmDsX5syJHktLkz1+\nF1RXV1NWVkaHDh1YuXJlrf5eTdWYOwBnzJjBunXrACgrK6OoqIji4mJGjx7N8uXLuf/++9m+fTvb\ntm1j0aJFrF69Om9xioiItGatO/mCKGEaMmTXE6emHh/UreGqzy233MLdd99Np06duPTSSzn33HPr\nPU+u56xv/2zrCxYs4Mgjj6S0tJQzzzyT2267jR49etCpUyeeeOIJpk+fzr777kv37t35wQ9+wNat\nWxsVi4iISFulcb6k1VGZEBGRQtM4XyIiIiLNhJIvERERkQQp+RIRERFJkJIvERERkQQp+RIRERFJ\nkJIvERERSVTM0yY3e0q+REREJDEJTJvc7Cn5EhERkcQkMG1ys6fkqxlbs2YNRUVFfPbZZwCMGjWK\nadOm5bRvY9100038y7/8yy7HKiIikovUtMklJbFNm9zsaYT7GI0cOZKjjz6aCRMm1Nr+yCOP8K1v\nfYu1a9dSVFR//rtmzRr69OnDtm3bsu7X2H2feeYZLrzwQt55552cf5eWpDmXCRERiZoaly+PEq8E\npk0uCI1wXyDjxo1j+vTpn9s+ffp0xo4d22CSFBd3b/S8kCIiIvmSp2mTWywlXzH6yle+wocffsiz\nzz5bs+2jjz7i8ccf56KLLgJg1qxZDBo0iLKyMiorK/nRj35U7/lOPPFEfvOb3wDw2Wefcc0117DX\nXntxwAEHMHPmzFr73n333fTr149OnTpxwAEHMGnSJAC2bNnCqFGjWLduHaWlpXTq1In33nuPH/3o\nR4wdO7bm+EcffZT+/ftTXl7OSSedxKpVq2qe6927N7fccgsDBgygS5cunHfeefVOrD116lSGDRvG\n1VdfTZcuXTjggAOYP38+U6dOpWfPnuyzzz7cc889NfvPmjWLQw89lE6dOlFRUcGtt95a89zjjz/O\n4YcfTpcuXRg2bBivvPJKg++BiIhIc9Pqk6+m3s7alON33313zjrrrFrJxQMPPMAhhxxC//79Adhj\njz2YNm0aH3/8MTNnzuT222/n0UcfbfDckyZNYtasWSxdupQXXniBhx56qNbz3bp1Y9asWWzcuJEp\nU6bw7W9/myVLltCxY0dmz55N9+7dqa6uZuPGjeyzzz4ANbVhq1ev5vzzz2fixIm8//77jBw5kjPO\nOIPt27fXnH/GjBk8+eSTvPnmmyxdupS777673lgXLlzIwIEDWb9+Peeddx7nnnsuL7zwAq+//jrT\npk3j8ssvZ8uWLQBcfPHFTJ48mY0bN7Js2TJOOukkAF566SW++c1vMnnyZNavX8/48eMZPXo027Zt\ny+GdEBERaT5adfLV1NtZ83E77Lhx45gxY0ZNzdC0adMYN25czfPHH388h4behv379+fcc8/lmWee\nafC8M2bM4KqrrqJ79+507tyZ73//+7WeHzlyJL169QLguOOO45RTTmHu3Lk5xfzggw9y+umnc9JJ\nJ1FcXMw111zDJ598wrx582r2ufLKK+nWrRudO3fmjDPOYMmSJfWer3fv3lx00UWYGeeccw7vvvsu\nN9xwAyUlJYwYMYJ27drx17/+FYB27dqxfPlyqqurKSsrY+DAgQBMnjyZb33rWwwePBgzY+zYsbRv\n357nn38+p99JRESkuWjVyVdTb2fNx+2wxx57LHvttRcPP/wwb7zxBosWLeL888+veX7hwoWcdNJJ\n7L333nTu3Jk77riDDz74oMHzrlu3joqKipr1ysrKWs/Pnj2boUOHsueee9KlSxdmz56d03lT504/\nn5lRUVHB2rVra7Z169atZrljx45s2rSp3vOl79uhQwcAunbtWmtb6vjf/e53zJw5k8rKSk488cSa\n5GrNmjXccsstlJeXU15eTpcuXXj33XdZt25dTr+TiIhIc9Gqk6+m3s6ar9thx44dy9SpU5k+fTqn\nnnoqe+21V81z559/Pl/5yldYu3YtH330EePHj8/pTr1999231t2Ka9asqVneunUrZ555Jtdeey3v\nv/8+GzZsYOTIkTXnbaizfffu3WudD+Cdd96hR48eOf2+TXHEEUfw8MMP8/777zNmzBjOPvtsACoq\nKrjuuutYv34969evZ8OGDWzatIlzzjkn9phERETyqVUnX6WlMHcuzJkTPTb2roqmHp9y0UUX8dRT\nT3HnnXfWanIE2LRpE126dKGkpISFCxdy33331Xq+vkTs7LPPZuLEiaxdu5YNGzZw88031zy3detW\ntm7dSteuXSkqKmL27Nk8+eSTNc9369aNDz/8kI0bN9Z77pkzZ/L000+zfft2fvazn7H77rszdOjQ\nXXsB6qjvd9q2bRv33XcfGzdupLi4mNLSUoqLiwG45JJLuP3221m4cCEAmzdvZtasWWzevDkvMYmI\niCSlVSdf0PTbWfNxO2xlZSXHHHMMW7ZsYfTo0bWeu+2227j++uspKyvjxhtv/FxNTnotVfryJZdc\nwqmnnsqAAQMYPHgwX/va12qe22OPPZg4cSJnnXUW5eXl/Pa3v2XMmDE1zx900EGcd9559OnTh/Ly\nct57771a1+zbty/Tp0/n8ssvZ6+99mLmzJk89thj7Lbbbp+LY1fUPT59fdq0afTu3ZvOnTszadKk\nmmT0iCOOYPLkyVx++eWUl5fTt29fpk6d2qQ4RERECkGDrEqrozIhIiKFpkFWRURERJoJJV8iIiIi\nCVLyJSIiIpIgJV8iIiIiCVLyJSIiIolq6tR/LZ2SLxEREUlMdTUcc0w0dd8xx7TNBEzJl4iIiCRm\nwYJo+r7t26PHMHZ2m7JboQNoqsrKyiYP+imtS915LkVERJqTFj/IqoiIiLQcqWbHlSvhkENg3rym\n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\nNLNiYATRpNqHATOB+929IOMWq9lRREREWopdGmoiTKL9R3cfBwwB/gpUmdnlMcUpIiIi0uplHWrC\nzNoDXyaq/eoFTAT+EH9YIiIiIq1TtmbHe4D+wCzgt+6+LMnAMsSjZkcRERFpEXZpeiEz+wzYHFbT\ndzLA3b1TXqNsgJIvERERaSl2aagJd89lAFYRERERaQQlWCIiIiIJij35MrPTzGyVma02s+9meP4E\nM/vIzBaHn/+IOyYRERGRQsllYu1dZmZFwC+Bk4F1wCIze8TdV9XZdY5GzBcREZG2IO6ar6OA19x9\njbtvA34LjMmwn0bPFxERkTYh7uRrP6IpilLeDdvqGmpmS8xsppn1izkmERERkYKJtdkxRy8CPd19\ni5mNBB4G+mbaccKECTXLw4cPZ/jw4UnEJyIiIpJVVVUVVVVVOe1b7zhf+WBmQ4AJ7n5aWP8e0Rhh\nN2c55k3gCHdfX2e7xvkSERGRFmGX5nbMk0XAAWZWaWbtgHOBR+sE1y1t+SiihHA9IiIiIq1QrM2O\n7r4jTMT9JFGid5e7rzSz8dHTPgk408wuBbYBnwDnxBmTiIiISCHF2uyYT2p2FBERkZaikM2OIiIi\nIpJGyZeIiIhIgpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeIiIhIgpR8\niYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeIiIhI\ngpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeI\niIhIgpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRIyZeIiIhIgpR8iYiIiCRI\nyVdzsHo1fPe70aOIiIi0aubuhY4hJ2bmLSXWRlm9Gg46aOf6q69C376Fi0dERESazMxwd8v0nGq+\nCu2662qvX399YeIQERGRRCj5KrQVK2qvL19emDhEREQkEUq+Cu3ii7Ovi4iISKuiPl+FVl0NAwbA\nm29C796wdCmUlhY6KhEREWmCbH2+lHw1B9XVUXPjoYcq8RIREWkFlHyJiIiIJEh3O4qIiIg0E0q+\nRFqadetg0qToUUREWpzdCh2AiDTCunWw//7w6aew++7w+uvQvXuhoxIRkUZQzZdIS/L441HiBdHj\nrFmFjUdERBpNyZdISzJ4cO31QYMKE4eIiOwyJV8iLcnMmdnXRUSk2VPyJdKSrFxZe/3VVwsTh4iI\n7LLYky99S9rdAAAPeklEQVQzO83MVpnZajP7bj37TDSz18xsiZkNjDsmkRbrC1+ovd6xY2HiEBGR\nXRZr8mVmRcAvgVOBQ4HzzOzgOvuMBPZ39wOB8cDtccbU2lRVVRU6BEnSd75Te/2aa3I+VGVFGkPl\nRXKlstJ4cdd8HQW85u5r3H0b8FtgTJ19xgD3ALj7AqDMzLrFHFeroULfxvTtGzU1fu970WPfvjkf\nqrIijaHyIrlSWWm8uMf52g94J239XaKELNs+a8O2v8cbmkgL1bcv3HRToaMQEZFdpA73IiIiIgmK\ndWJtMxsCTHD308L69wB395vT9rkdeNrdHwjrq4AT3P3vdc6lWbVFRESkxahvYu24mx0XAQeYWSXw\nN+Bc4Lw6+zwKXAY8EJK1j+omXlD/LyAiIiLSksSafLn7DjO7HHiSqInzLndfaWbjo6d9krvPMrNR\nZvZXYDPwjThjEhERESmkWJsdRURERKQ2dbhvBDPbYWaLzewVM3vEzDrl6byVZvZKPs5V57w3mNm7\nIebFZvY/+b5G2rUGhDHbJFB5yXqtNldezKw6w7bxZnZhwnE8HQa+XmJmC8zssCSv3xAz+5GZnVTo\nOJKWqXzswjn2NbMHszxfZmaX5rp/huOnmNkb4fPhpeb2PhXi72lXKflqnM3uPsjdvwhsIOqrli9x\nVUHeGmIe5O4/yPWgMEBuYwwERjXymNZO5aV+bbG8fO49c/c73H16nBc1s0z9Zc9z94HAr4Gf5ek6\nxfk4j7vf4O5/yce5Wpgm/027+9/c/ewsu3QB/rUR+2dyjbsPAr5NngZFz2PZif3vKV+UfO26+UTj\nkWFmXzCzp8zsBTNbamajw/ZKM1thZpPMbJmZ/dHM2ofnjgjfPF8i7Z+ymbU3s9+Y2ctm9qKZDQ/b\nx5nZH8zsyfDN4zIz+3b4BjLPzDrXE+fnPnjN7ORw3FIzu9PMSsL2N83sx2b2AnCmmfUxs9lmtsjM\nnjGzvmG/s0JtzktmVhWO/0/g7HDes/L0GrcmKi8qL59jUW3j1WH56fB6LrCoZurYsL3IzH4Sti8x\ns0vC9mzlaJWZTbWohrRHpkuHx/lA97R4RoTy8YKZPWBmHcP2UWa2Mry3Pzezx9Liv8fMngXuyRLr\nPqFMLA5l9diw75SwvtTMrgz7TjGzr4blbGVvQijzS1NlrbUJ7+Wfw2v5JzPrEbb3MbP54Xf/Lwu1\nZpZWK25m/cL7sDgcvz9wE7B/2HZznf2LzOyn4W91iZk19GWxbtkZFP6+F4XPgW5h+5EhzsWhbKSu\nN86iFoE/A0+FbdeY2cJw/RvCto5m9nj4/Hg59XkR/laWhX1/Eral/z0NDK/REjP7nZmVhe0Z/84S\n5+76yfEHqA6PxcCDwClhvQjYIyzvSTSqP0AlsBX4Ylh/ADg/LC8Fjg3LPwFeDstXA3eG5YOANUA7\nYBywGugIdAU+Ai4J+90KXJEh3huIBrZdHH5GAO2Bt4mmdAKYmjoWeJPoW03q+KfS9jsK+HNYfhnY\nNyx3Co/jgImFfo+a04/Ki8pLndd3Yz2v+dVh+Wngp2F5JPCnsHwJ8IOw3I7oLvLKBsrRduDIeuJ4\nGhgUlq8Ebkw7xzNAh7B+LfAfaWWgZ9h+H/BoWvyLgHYNxHo18P2w3YAvAIOAJ9PiSpWNKcBXcyh7\n/xqWLwUmF/r9jal8PApcGJa/AfwhLD8GnB2Wx6eODa916rNhIlENJ0Q317VPfz7D/pcSfU6l+oJ3\nzhDPFOCrYfkrwPS08z8H7BnWzya6wQ7gFeCosHxT2vXGhfe3LKyPAO5IKyOPAcNCWbgjLYZSoBxY\nlaHspP89LQWGheUfEdXqQz1/Z0n/qOarcTqY2WKiYTP2Bv4UthcBN5nZUqJ/QN3NbO/w3Jvunuqf\n8yLQK2TgZe7+XNg+Le0aw4DpAO7+KvAWkPpW97S7b3H3D4j+mT4etr8C9Kon5vRmpD8R/YN+w91f\nD89PBY5P2z813toXgGOAGRbVttwBpKZ9eg6YamYXE/9wJS2ZyktE5SV3vw+PLxL9YwQ4BbgovK4L\niP7xHEhUjn5cTzla4+6LslznXjN7A/gB8KuwbQjQD3guXOuiEMPBwOvu/nbY7/4653rU3bc2EOsi\n4J/N7IfAYe6+GXgD6B1q0k4F6vZ5aqjs/SHDa9XaDGXn6z0NODZt+0Nh+b56jp0PXGdm1wK93P0f\nDVzrZKIkxwHc/aN69vupmb1K9LmTGrPzIKA/8Kfw3l9HVB7LiL4gLKwn1j+5+8dh+RRgRPjMXBzO\neSDR59UIM7vJzIa5ezXwMfBJqA39J+CT9JNa1L+2zN2fDZvqlp1Mf2eJ0gdh42xx90FmtjvwBFHz\nzy+BC4hqFw5398/M7E1g93BMeoHfkbY913HL0vdLP5enrX9G497LbNfeHB6LgA0ete3X4u6XmtmR\nwOnAi2b2uX0EUHmJLqzy0hip92gHO98jA/4tJMM1zGwcUW1VpnK0mezOd/eXQnPNL4Gvhes86e4X\n1LnOAHIrA/XGGs5zHPBl4G4zu8Xdp4dznwp8CzgLuLjuYVmum+m1am1y6QeW8TVy9/vN7Hmiv7tZ\nZvYvRDWGTfUdd/+9RcNITQEGhxiWuXutJrxUU18WdcvOTe4+ue5O4TNjFHCjmT3l7jea2VFECeNZ\nwOVhudZhWa5b8LKjmq/GMQB3/5Souv4aizoalwH/Fz4AT6R2Jv25AhAy/Q1mdkzYlH53xlyif86E\nfgwVwKt5/B1eBSrNrE9YHwtUZYixGnjTzM5MbbNwV5SZ9XH3Re5+A/B/IcZqIC9387UiKi+ovKRp\n7EDRqf2fAP7VzHYDMLMDLeqL1ahyVM+5fwgcHcrO88CxoW9Qqq/NgURloLeZ9QzHnJPlvBljDcf+\nn7vfBdwJDDKzcqDY3f9A1LxZNynPqey1Ipnes3nsHJj8QqK/d4hqtVJ/a+dmPJlZb3d/091/ATwC\nHEb0d1daz/X/BIy30PndzLpkC9bdfxntZiOI3qu9LBooHTPbzcz6hc+u6vDlq95YgyeIake/EM7R\n3cz2MrN9gU/c/T7gp0RlpyNRs+gfiZq0a92x6+4bgfVp/bnGEjWpZ1KQAdyVfDVOzbcQd19C1KZ8\nHnAvcGSo/r8QWJnpmDr+GbgtVLGm73MbUGxmLxNVN49z923ZYmnULxBVPX8DeCjEu4OoiSjTOS8A\nvhk6LC4DRoftP7Wo4+PLwDx3f5moHb2ftfEO1HWovERUXiIdzOxtM3snPF5F7dew7uuZWr8TWAEs\ntqiz8u1E/Qh3pRzVei58MbiFqDbjA+DrwP3hnPOAg8I+/wo8YWaLgI1EzT6Z1BfrcGBpKL9nAz8n\nuhGgKjRTTQO+lx5fI8tea5CpfPwb8A0zW0L093Vl2PfbwNVh+/5kfj/OtqhD+kvAocA97r6eqFn5\nZTO7uc7+dwLvAC+HY+rORgOff93/G7g2fOacBdwcYnqJqGkUotrMO8N737GeWAm1pfcB88NnxQxg\nD+CLwMIQ0w+BG4m+uD0eysWc8HrU9XXgZyGeAUQ3+WT6HQpSljTIqoiIZGVmXwj9tDCzXwGr3f3n\nBQ6rzTKzDu7+SVg+BzjX3f+pwGFlVKfsfBfYx90zJUttSmttJxcRkfy5JPQxa0fUGfqOBvaXeB1h\nZr8kajLbQFQz3lx92cy+T5RvvEVUI9XmqeZLREREJEHq8yUiIiKSICVfMbOY5vfbhTgaNYeXxMPM\nupnZ/Wb2mkUjQT8e7gjL21yNljY3npkNC51uF4e7h3apDFg0GvU+aeuTzOzgfMUsItKWqNkxZma2\n0d07heW7gVfd/aY8nLfY3Xc09TySLDObB0xJjWVjZl8kGjLgNnfP+wTHZvZrYG64Tbsp53maaDT7\nF/MTmYhI26War2TVzO8HmeexCtuvt2jOqTlmdp/Vnvvtf8Pt3leYWVcze8iiOaoWmNnQsN8JFs2D\ntdiiuc++YLXn8Mo2H+DvLJqX69UMtyJLE1g0FtPW9EEEw2j276TtUxne9xfCT2rcnEbPjWdm3yS6\nrf+/zGya5TCPWyh7C8I5bw/bvkY0kOL0cP3dQ1kcFJ4/L+z/spn9OO13qTazG8P555nZXvG+wiIi\nLYPudoyfAalZ208mGksFiwamO9DdjzIzAx41s2HAp8A/EY1t0p7ozqIX0s5X4u5HhnPcSzQdzDwz\nqyAapK4f8O9E857Nt2gwuk/DsalqzsuAz9z9MDM7CHjSosEUIRoPZSCwDXjVzCa6+9o8vyZtVX+i\n6Syy+T/gS+6+1cwOIBq760jgfOCP7n5TKC8did6n/VI1ZnWbtN39rlCmHgsjUleyswyMJxqU8zB3\nd9s50fYv3P2/wvnuMbMvu/vvLBrN+mp3fyk8R3jcF/gxcDjRFEZ/MrPR7v4o0fx989z9P0Iifwnw\nP41/2UREWhclX/FLze/Xg2jwwdS0G+nzWKUmmj2QaPC4R8KgddvM7LE653sgbflLwCGW+k8Ie4Rk\n6zngf0Ny9nt3X7tzFyCaD3AiRPMBmtlb7JwP8M/uvgnAzFYQ/YNW8pWcEuAOMxtINKhkKileBNxl\nZiVE5WOpRXPz9TaznwOzgCcbcZ2TgV9nmMftZDP7DlFy1wVYBswMz2UaCfpIojkk10PNF4LjiSYE\n3urus8J+LxKVVxGRNk/NjvHbEua760n0z+uysD01j9Ugdz/c3fu6+5Qczld3Lqyjw/GHu3tPjyZS\nvhn4JtCBaDTjvhnPVPs8KXXnFlSCnj/LiZrvsvk28F6ozRpMNK4S7j6XKKlZSzQ33oUhYRpANOXK\nt4DPzYnWGGbWnmiS5a+G69/JzrkCsx5az/b0kfZVlkREAiVf8atvfr+M81gR1VqdEfpl7UE0KWp9\nnmTndBOpCXBTc+ktd/efENWY1L0rLe75ACUDd/8L0M7MaiYPtqjDfUXabmXA38LyRURTs2C7Njde\nNpnmcdudqFnyw1D2zkzbv765GBcCx5tZeTjXebTu+fdERJpMyVf8Ms7vF+axup8681i5+wtETTZL\niZp7XmbnXFh1b029EhgcOlsvI+rHA3BVqiM1sBWYXee4WOcDlKz+iai5+a+h8/v/AO+lPX8b8HWL\n5jHrC2wK24fTyLnxMiyn+9w8bmES3DuJauhmEyVWKXcDt6c63LNz/r33wnWriOZze8HdH2/g2iIi\nbZqGmmiGLMyFZWYdiCYNvSQkbiIiItLCqQ9G8zTJzPoR3e14txIvERGR1kM1XyIiIiIJUp8vERER\nkQQp+RIRERFJkJIvERERkQQp+RIRERFJkJIvERERkQQp+RIRERFJ0P8HG3WsDk67UQsAAAAASUVO\nRK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11433cb10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, ax = plt.subplots(figsize=(10, 4))\n",
    "ax.plot(np.arange(4)-.1, mse_train, 'r.')\n",
    "ax.plot(np.arange(4)+.1, mse, 'b.')\n",
    "ax.plot(-10, 10, 'r.', label='Train mse')\n",
    "ax.plot(-10, 10, 'b.', label='Validation mse')\n",
    "plt.legend(loc='best')\n",
    "ax.set_xticks(range(4))\n",
    "ax.set_xticklabels(model_names)\n",
    "ax.set_ylim(0, 2)\n",
    "ax.set_ylabel('Mean-squared Error')\n",
    "_ = ax.set_xlim(-.5, 3.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Advanced exercise\n",
    "Try adding the arm speed (norm of the velocity vector) as an additional regression variable. Does this improve the model's ability to predict held-out datapoints?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "hide_input": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
